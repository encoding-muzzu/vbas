{"version":3,"sources":["hoc/Aux.js","Store/Actions/types.js","Store/Actions/action.js","Views/Login/Login.js","Views/Face_enrollment/Face_enrollment.js","Views/Home/Home.js","Views/Mark_attendance/Mark_attendance.js","Views/Mark_attendance/Mark_uttam_bhai.js","Views/Registration/Registration.js","Component/Header/Header.js","Component/SideBar/SideBar.js","Views/Mark_attendance/Mark_attendencetable.js","Component/Layouts/Layouts.js","App.js","reportWebVitals.js","Store/Reducers/reducer.js","Store/Reducers/index.js","index.js"],"names":["Aux","props","children","CAMERAACTION","LOGIN","DID","SYNCDATA","SUBORGS","REGISTER","GETDETAILS","ENROLLFACE","MARKATTENDEE","CHECKLIVENESS","FACEEMBEDTYPE","MARKEMBEDTYPE","SUCCESS","NOTATTENDED","VIDEOSTOP","MARKCHECKLIST","ONLYMARKEDSTUDENTS","isSuccess","value","dispatch","type","actionTypes","payload","LoginAction","body","history","axios","post","headers","then","response","data","respcode","localStorage","setItem","orgid","did","orgname","toast","success","respdesc","error","catch","err","console","log","SyncDataAction","attendeesdetails","getSubOrgList","suborgs","ReigstrationAction","RegisterReducer","FaceEnGetDetailsAction","EnrollAttendeFaceAction","CheckFaceLiveness","trueData","falseData","Login","useState","userName","setUserName","Password","setPassword","useHistory","useDispatch","loginSuccess","useSelector","state","vbas_store","useEffect","replace","handleLogin","a","className","role","onChange","e","target","placeholder","aria-label","aria-describedby","required","onClick","Face_enrollment","myState","source","setSource","setSourceTwo","attdid","userData","setUserData","getItem","React","CropImage","setCropImage","setExtractImage","Templates","setTemplates","setImgSrcs","snapSoundElement","document","getElementById","toggleMarkBtn","setToggleMarkBtn","webcamRef","useRef","videostop","srcObject","getTracks","forEach","track","stop","MODEL_URL","Promise","all","faceapi","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","loadModels","useCallback","play","imageSrc","current","getScreenshot","width","height","prev","resizeFile","file","resolve","Resizer","imageFileResizer","uri","runThis","image","img","inputSize","withFaceLandmarks","withFaceDescriptors","face","extractFaceFromBox","detection","_box","length","undefined","descriptor","toString","imageRef","box","regionsToExtract","x","y","faceImages","cnv","toDataURL","handleSubmit","handleCapture","files","i","secHandleSubmit","slice","formFields","size","field","htmlFor","id","readOnly","formFieldsTwo","FaceGetDetails","attdname","attdcode","attdorg","attdcategory","accept","style","display","capture","multiple","Button","color","PermMediaRounded","fontSize","marginTop","margin","padding","justifyContent","border","map","useLoading","loading","indicator","textAlign","top","left","right","bottom","position","zIndex","containerProps","indicatorEl","item","idx","xs","disabled","Home","loader","Date","toLocaleString","syncData","mtcnn","JSON","stringify","Mark_attendance","Mark","setState","setChangeAttdcode","ListAttened","setListAttened","onlyAttdcode","setonlyAttdcode","facingMode","setFacingMode","disabledBtn","setdisabledBtn","ShowList","setShowList","setClonedList","modelLoading","setModelsState","videoRef","canvasRef","card0","card1","card2","buttonDisabled","data1","videoStop","setTimeout","startVideo","attdcodesList","Array","from","Set","newVar","user","push","SynData","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","supports","mediaDevices","getSupportedConstraints","alert","options","audio","video","stream","src","window","URL","createObjectURL","onloadedmetadata","handlerCloseCam","handleVideoOnPlay","displaySize","cInterval","setInterval","referenceImage","fullFaceDescriptions","getContext","clearRect","drawDetections","syncDataArr","labeledFaceDescriptors","ftemplate","split","templateItem","convertTemplate","splice","filter","Boolean","faceDescriptors","Float32Array","faceMatcher","results","fd","findBestMatch","bestMatch","index","text","r","today","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","match","userDetails","newObject","_distance","toFixed","includes","DrawBox","label","distance","anchorPosition","backgroundColor","boxColor","lineWidth","draw","drawOptions","markAttendence","ref","onPlay","autoPlay","muted","borderRadius","background","boxShadow","name","aid","class","aria-hidden","val","key","time","fimg","n","iconDisplay","code","newFunc1","Mark_attendance2","MarkEmbedRedcuer","setClearTimeInterval","clearInterval","formatedTimestamp","d","date","toISOString","toTimeString","videoConstraints","parse","widht","Registration","attendeName","idCode","email","number","nodal","attendeCategory","gender","getSubOrg","subOrgs","for","defaultValue","defaultChecked","Header","navbar-scroll","iconSidenav","sidenav","getElementsByTagName","classList","contains","remove","add","SideBar","reducerStore","itemsList","active","icon","url","alt","exact","to","activeClassName","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","transform","opacity","backgroundImage","clear","Mark_attendencetable","MarkAttendence","RandomList","setRandomList","ImageName","setImageName","RandomCardAuth","setRandomCardAuth","BorderColor","setBorderColor","checkedState","setCheckedState","MarkData","checkResp","CheckLivenessResp","onlyMarkedData","performance","navigation","TYPE_RELOAD","result","len","taken","Math","floor","random","getRandom","getBase64","baseURL","reader","FileReader","readAsDataURL","onload","faceMatchFunc","textSplit","reqData","ListOfStudents","num","markchecklist","attddes","checked","updatedCheckedState","handleOnChange","pointerEvents","Layouts","path","strict","component","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL","cameraRed","Did","EnrollFaceReducer","MarkAttendeReducer","FaceEmbedReducer","NotAttendedStudent","AllReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.ede53682.chunk.js","sourcesContent":["const Aux = props => props.children;\n\nexport default Aux;","export const CAMERAACTION = \"CAMERAACTION\";\nexport const LOGIN = \"LOGIN\";\nexport const DID = \"DID\";\nexport const SYNCDATA = 'SYNCDATA';\nexport const SUBORGS = 'SUBORGS';\nexport const REGISTER = 'REGISTER';\nexport const GETDETAILS = 'GETDETAILS';\nexport const ENROLLFACE = 'ENROLLFACE';\nexport const MARKATTENDEE = 'MARKATTENDEE';\nexport const CHECKLIVENESS = 'CHECKLIVENESS';\nexport const FACEEMBEDTYPE = 'FACEEMBEDTYPE';\nexport const EMBEDONETYPE = 'EMBEDONETYPE';\nexport const MARKEMBEDTYPE = 'MARKEMBEDTYPE';\nexport const SUCCESS  = 'SUCCESS';\nexport const NOTATTENDED  = 'NOTATTENDED';\nexport const VIDEOSTOP = 'VIDEOSTOP';\nexport const MARKCHECKLIST = 'MARKCHECKLIST';\nexport const ONLYMARKEDSTUDENTS = 'ONLYMARKEDSTUDENTS';\n","import axios from 'axios';\nimport { toast } from 'react-toastify'\nimport * as actionTypes from './types'\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const isSuccess = (value) => {\n    // console.log(value)\n    return (dispatch) => dispatch({\n        type: actionTypes.SUCCESS,\n        payload: value\n    })\n}\n\nexport const onlyMarkedStudentsListAction = (value) => {\n    return {\n        type: actionTypes.ONLYMARKEDSTUDENTS,\n        payload: value\n    }\n}\n\nexport const CameraAction = (data) => {\n    return {\n        type: actionTypes.CAMERAACTION,\n        payload: data,\n    }\n}\n\nexport const ClearCheckLiveness = () => {\n    return {\n        type: actionTypes.CHECKLIVENESS,\n        payload: { card0: true, card1: false, card2: false, buttonDisabled: false },\n    }\n}\n\nexport const synData = (data) => {\n    return {\n        type: actionTypes.SYNCDATA,\n        payload: data,\n    }\n}\nexport const markChecklist = (data) => {\n    console.log(data, \"action\")\n    return {\n        type: actionTypes.MARKCHECKLIST,\n        payload: data,\n    }\n}\n\nexport const dids = (data) => {\n    return {\n        type: actionTypes.DID,\n        payload: data,\n    }\n}\n\nexport const ResetLogin = () => {\n    return (dispatch) => dispatch({\n        type: actionTypes.LOGIN,\n        payload: \"\"\n    })\n}\nexport const NotAttendedList = (data) => {\n    return (dispatch) => dispatch({\n        type: actionTypes.NOTATTENDED,\n        payload: data\n    })\n}\nexport const videoStop = (data) => {\n    return (dispatch) => dispatch({\n        type: actionTypes.VIDEOSTOP,\n        payload: data\n    })\n\n}\n\n\nexport const LoginAction = (body, history) => {\n    return (dispatch) => {\n        const URL = 'https://falconfly.syntizen.com/api/api/vbas/UserLogin';\n        const headers = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'apikey': ' ',\n            },\n            // body: JSON.stringify({ \"username\": userName, \"password\": Password, \"macid\": \"11:11:11:11:11\", \"appver\": \"1.0\" })\n        };\n        axios.post(URL, body, headers)\n            .then(response => {\n                if (response.data.respcode === '200') {\n                    localStorage.setItem('orgid', response.data.orgid)\n                    localStorage.setItem('did_from_login', response.data.did)\n                    localStorage.setItem('orgname', response.data.orgname)\n                    // history.push(\"/home\")\n                    toast.success(response.respdesc);\n                    dispatch({\n                        type: actionTypes.LOGIN,\n                        payload: response.data?.respcode\n                    })\n                    // history.replace('/home');\n                }\n                else {\n                    toast.error(\"Login Failed !!\");\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n}\n\nexport const SyncDataAction = (body) => {\n    return (dispatch) => {\n        const URL = 'https://falconfly.syntizen.com/api/api/vbas/WebSyncAttendeesData';\n        const headers = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'apikey': ' ',\n            }\n        };\n        // console.log(body, 'req')\n        axios.post(URL, body, headers)\n            .then(response => {\n                if (response.data.respcode === '200') {\n                    // console.log(response.data, 'resp')\n                    // localStorage.setItem('syncdata', JSON.stringify(response.data.attendeesdetails));\n                    // console.log(response.data.attendeesdetails)\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n                    dispatch({\n                        type: actionTypes.SYNCDATA,\n                        payload: response.data.attendeesdetails\n                    })\n                }\n                else {\n                    toast.error(response.data.respdesc);\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n                }\n\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch({\n                    type: actionTypes.SUCCESS,\n                    payload: false\n                })\n            })\n\n    }\n}\n\n\nexport const SyncDataOnButtonAction = (body) => {\n    return (dispatch) => {\n        const URL = 'https://falconfly.syntizen.com/api/api/vbas/WebSyncAttendeesData';\n        const headers = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'apikey': ' ',\n            }\n        };\n        axios.post(URL, body, headers)\n            .then(response => {\n                if (response.data.respcode === '200') {\n                    toast.success(\"success\");\n                    localStorage.setItem('syncdata', JSON.stringify(response.data.attendeesdetails));\n                    dispatch({\n                        type: actionTypes.SYNCDATA,\n                        payload: response.data.attendeesdetails\n                    })\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n                }\n                else {\n                    toast.error(response.data.respdesc);\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n\n                }\n            })\n            .catch(err => {\n                dispatch({\n                    type: actionTypes.SUCCESS,\n                    payload: false\n                })\n\n            })\n\n    }\n}\n\n\nexport const getSubOrgList = (body) => {\n    return (dispatch) => {\n        const URL = 'https://falconfly.syntizen.com/api/api/vbas/GetSubOrganisationList?';\n        const headers = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'apikey': ' ',\n            }\n        };\n        axios.post(URL, body, headers)\n            .then(response => {\n                if (response.data.respcode === '200') {\n                    dispatch({\n                        type: actionTypes.SUBORGS,\n                        payload: response.data?.suborgs\n                    })\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n                }\n                else {\n                    toast.error(\"Please Refrest Page\");\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch({\n                    type: actionTypes.SUCCESS,\n                    payload: false\n                })\n\n            })\n\n    }\n}\n\nexport const ReigstrationAction = (body) => {\n    return (dispatch) => {\n        const URL = 'https://falconfly.syntizen.com/api/api/vbas/RegisterAttendee?';\n        const headers = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'apikey': ' ',\n            }\n        };\n        axios.post(URL, body, headers)\n            .then(response => {\n                if (response.data.respcode === '200') {\n                    toast.success(response.data.respdesc)\n                    dispatch({\n                        type: actionTypes.REGISTER,\n                        payload: response.data?.RegisterReducer\n                    })\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n\n                }\n                else {\n                    toast.error(response.data.respdesc);\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch({\n                    type: actionTypes.SUCCESS,\n                    payload: false\n                })\n\n            })\n\n    }\n}\n\nexport const FaceEnGetDetailsAction = (body) => {\n    return (dispatch) => {\n        const URL = 'https://falconfly.syntizen.com/api/api/vbas/GetAttendeeDetails';\n        const headers = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'apikey': ' ',\n            }\n        };\n        axios.post(URL, body, headers)\n            .then(response => {\n                if (response.data.respcode === '200') {\n                    isSuccess(false);\n                    dispatch({\n                        type: actionTypes.GETDETAILS,\n                        payload: response.data.attendeesdetails[0]\n                    })\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n                }\n                else {\n                    toast.error(response.data.respdesc);\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch({\n                    type: actionTypes.SUCCESS,\n                    payload: false\n                })\n            })\n\n    }\n}\n\nexport const EnrollAttendeFaceAction = (body) => {\n    return (dispatch) => {\n        const URL = 'https://falconfly.syntizen.com/api/api/vbas/WebEnrollAttendeeFace';\n        const headers = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'apikey': ' ',\n            }\n        };\n        axios.post(URL, body, headers)\n            .then(response => {\n                if (response.data.respcode === '200') {\n\n                    toast.success(response.data.respdesc);\n                    dispatch({\n                        type: actionTypes.ENROLLFACE,\n                        payload: response.data\n                    })\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n                }\n                else {\n                    toast.error(response.data.respdesc);\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n\n                }\n\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch({\n                    type: actionTypes.SUCCESS,\n                    payload: false\n                })\n\n            })\n\n    }\n}\n\nexport const MarkAttendeeAction = (body) => {\n    return (dispatch) => {\n        const URL = 'https://falconfly.syntizen.com/api/api/vbas/SyncAttendanceLogs';\n        const headers = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'apikey': ' ',\n            }\n        };\n        axios.post(URL, body, headers)\n            .then(response => {\n                if (response.data.logsack[0].respcode === '200') {\n                    toast.success(\"Attendance successfully marked for the attendee id\")\n                    dispatch({\n                        type: actionTypes.MARKATTENDEE,\n                        payload: response.data\n                    })\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n\n                }\n                else {\n                    toast.error(response.data.logsack[0].respdesc);\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch({\n                    type: actionTypes.SUCCESS,\n                    payload: false\n                })\n\n            })\n\n    }\n}\n\nexport const CheckFaceLiveness = (body, trueData, falseData) => {\n    return (dispatch) => {\n        const URL = 'https://falconfly.syntizen.com/api/api/vbas/CheckFaceLiveness';\n        const headers = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'apikey': ' ',\n            }\n        };\n        axios.post(URL, body, headers)\n            .then(response => {\n                console.log(response.data.respcode, 'response from checkface liveness');\n                if (response.data.respcode === '200') {\n                    // toast.success(response.data.respdesc)\n                    dispatch({\n                        type: actionTypes.CHECKLIVENESS,\n                        payload: trueData\n                    })\n                    dispatch({\n                        type: actionTypes.SUCCESS,\n                        payload: false\n                    })\n                    \n                } else if ( response.data.respcode === '216' || response.data.respcode === '402') {\n                    \n                    dispatch({\n                        type: actionTypes.CHECKLIVENESS,\n                        payload: falseData\n                    })\n                    \n                } else {\n                    // toast.error(response.data.respdesc)\n                    dispatch({\n                        type: actionTypes.CHECKLIVENESS,\n                        payload: falseData\n                    })\n\n                }\n                // else {\n                //     toast.error(response.data.logsack[0].respdesc);\n                //     dispatch({\n                //         type: actionTypes.SUCCESS,\n                //         payload: false\n                //     })\n                // }\n            })\n            .catch(err => {\n                dispatch({\n                    type: actionTypes.SUCCESS,\n                    payload: false\n                })\n                dispatch({\n                    type: actionTypes.CHECKLIVENESS,\n                    payload: false\n                })\n\n            })\n\n    }\n}\n\n\n\n\n\n\n\n// export const FaceEmbedAction = (body) => {\n//     isSuccess(true)\n//     return (dispatch) => {\n//         const URL = 'http://localhost:7000/embed';\n//         const headers = {\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             }\n//         };\n//         axios.post(URL, body, headers)\n//             .then(response => {\n//                 if (response.data.respcode === '200') {\n//                     toast.success('Success')\n//                     dispatch({\n//                         type: actionTypes.FACEEMBEDTYPE,\n//                         payload: response.data\n//                     })\n//                 }\n//                 else {\n//                     toast.error(response.data.respdesc);\n//                 }\n//                 // isSuccess(false)\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//                 // isSuccess(false)\n\n//             })\n\n//     }\n// }","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Aux from '../../hoc/Aux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { LoginAction } from '../../Store/Actions/action';\n\nconst Login = (props) => {\n\n    // const myState = useSelector((state) => state.vbas_store)\n    const [userName, setUserName] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const loginSuccess = useSelector(state => state.vbas_store);\n    // console.log(loginSuccess);\n\n    useEffect(() => {\n        if (loginSuccess.Login === \"200\") {\n            history.replace('/home')\n        }\n\n    }, [loginSuccess])\n\n\n    const handleLogin = async () => {\n        const data = { \"username\": userName, \"password\": Password, \"macid\": \"11:11:11:11:11\", \"appver\": \"1.0\", 'devtype': \"1\" }\n        await dispatch(LoginAction(data, history))\n        // history.replace('/home')\n        setUserName(\"\")\n        setPassword(\"\")\n\n    }\n\n    return (\n        <Aux>\n            <section>\n                <div className=\"page-header section-height-100\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-4 col-lg-5 col-md-6 d-flex flex-column mx-auto\">\n                                <div className=\"card card-plain mt-4\">\n                                    <div className=\"card-header pb-0 text-left bg-transparent\">\n                                        <h3 className=\"font-weight-bolder text-info text-gradient\">Welcome back</h3>\n                                        <p className=\"mb-0\">Enter your email and password to sign in</p>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <form role=\"form text-left\">\n                                            <label>Email</label>\n                                            <div className=\"mb-3\">\n                                                <input type=\"email\" value={userName} onChange={(e) => setUserName(e.target.value)} className=\"form-control\" placeholder=\"Email\" aria-label=\"Email\" aria-describedby=\"email-addon\" required />\n                                            </div>\n                                            <label>Password</label>\n                                            <div className=\"mb-3\">\n                                                <input type=\"password\" value={Password} onChange={(e) => setPassword(e.target.value)} className=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"password-addon\" required />\n                                            </div>\n                                            {/* <div className=\"form-check form-switch\">\n                                                <input className=\"form-check-input\" type=\"checkbox\" id=\"rememberMe\" defaultChecked />\n                                                <label className=\"form-check-label\" htmlFor=\"rememberMe\">Remember me</label>\n                                            </div> */}\n                                            <div className=\"text-center\">\n                                                <button onClick={handleLogin} type=\"button\" className=\"btn bg-gradient-info w-100 mt-4 mb-0\">\n                                                    Sign in\n                                                    </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"oblique position-absolute top-0 h-100 d-md-block d-none me-n8\">\n                                <div className=\"oblique-image bg-cover position-absolute fixed-top ms-auto h-100 z-index-0 ms-n6\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <ToastContainer />\n        </Aux>\n    );\n}\n\nexport default Login;\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport Webcam from \"react-webcam\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport Aux from '../../hoc/Aux';\nimport { CameraAction, FaceEnGetDetailsAction, EnrollAttendeFaceAction, isSuccess } from '../../Store/Actions/action';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PhotoCameraRounded, PermMediaRounded, Close } from \"@material-ui/icons\";\n// import PermMediaIcon from '@material-ui/icons/PermMedia';\nimport { Button, Dialog, DialogActions, DialogContent, Box, IconButton, DialogContentText, DialogTitle } from '@material-ui/core';\nimport * as faceapi from 'face-api.js';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useLoading, Oval } from '@agney/react-loading';\nimport Resizer from \"react-image-file-resizer\";\n\nfunction Face_enrollment(props) {\n\n    const myState = useSelector((state) => state.vbas_store)\n    const dispatch = useDispatch();\n    const [source, setSource] = useState([]);\n    const [sourceTwo, setSourceTwo] = useState(\"\");\n    const [userData, setUserData] = useState({ attdid: '' });\n    const orgid = localStorage.getItem('orgid')\n    const [open, setOpen] = React.useState(false);\n    const [CropImage, setCropImage] = useState(\"\");\n    // const [extractimage, setExtractImage] = useState({img:'', img1: ''});\n    const [imageset, setImageset] = useState(false);\n    const [extractimage, setExtractImage] = useState('');\n    const [Templates, setTemplates] = useState([]);\n    const [dTemplates, dsetTemplates] = useState([]);\n    const [imgSrcs, setImgSrcs] = React.useState([]);\n\n\n\n\n    // const [faceTwo, setfaceTwo] = useState('');\n    const snapSoundElement = document.getElementById('snapSound');\n    // const [Interval, setTimeInterval] = useState();\n    // const [Template, setTemplate] = useState([]);\n    const [toggleMarkBtn, setToggleMarkBtn] = useState(true);\n    const webcamRef = React.useRef(null);\n\n    useEffect(() => {\n        myState.videostop?.srcObject?.getTracks().forEach((track) => {\n            track.stop();\n        })\n        const loadModels = async () => {\n            const MODEL_URL = process.env.PUBLIC_URL + '/models/';\n            Promise.all([\n                faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n                faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n                faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n            ])\n        }\n        loadModels();\n    }, [])\n\n    const capture = React.useCallback(\n        () => {\n            if (snapSoundElement != null) {\n                snapSoundElement.play();\n            }\n            // dispatch(isSuccess(true));\n            const imageSrc = webcamRef.current.getScreenshot({ width: 600, height: 360 });\n            setImgSrcs(prev => [...prev, imageSrc]);\n            // const data = {\n            //     \"live_img\": imageSrc,\n            //     \"txnid\": \"34\",\n            //     \"rrn\": \"2\",\n            //     \"refr\": \"4\"\n            // }\n        }, [webcamRef, setImgSrcs]\n    );\n\n\n\n    const resizeFile = (file) =>\n        new Promise((resolve) => {\n            Resizer.imageFileResizer(\n                file,\n                300,\n                300,\n                \"JPEG\",\n                100,\n                0,\n                (uri) => {\n                    resolve(uri);\n                },\n                \"base64\"\n            );\n        });\n\n    const runThis = async (image) => {\n        try {\n            // const image = localStorage.getItem('base_img')\n            const img = await faceapi.fetchImage(image);\n            try {\n                const face = await faceapi.detectAllFaces(img, new faceapi.TinyFaceDetectorOptions({ inputSize: 320 })).withFaceLandmarks().withFaceDescriptors();\n                extractFaceFromBox(img, face[0].detection._box);\n                if (face.length > 1) {\n                    dispatch(isSuccess(false));\n                    toast.error('Multiple faces found')\n                } else if (face.length == 0 || face == undefined) {\n                    dispatch(isSuccess(false));\n                    toast.error('Face Not Found')\n                } else {\n                    // localStorage.setItem('face_imgs', face[0].descriptor)\n                    setTemplates(Templates => [...Templates, \"$$\" + [face[0].descriptor].toString()])\n                    setSource(source => [...source, image])\n                }\n                setToggleMarkBtn(false);\n            } catch (e) {\n                // setToggleMarkBtn(false);\n            }\n            // if (face[0].descriptor === 512) {\n            dispatch(isSuccess(false));\n            // }\n            // setTemplate(face[0].descriptor);\n        } catch (error) {\n            console.log(error)\n            // toast.error(\"Please try again\")\n        }\n    }\n\n    const runThisImage = async (image1) => {\n        try {\n            // const image = localStorage.getItem('base_img')\n            const img1 = await faceapi.fetchImage(image1);\n            setImageset(true);\n            try {\n                const face = await faceapi.detectAllFaces(img1, new faceapi.TinyFaceDetectorOptions({ inputSize: 320 })).withFaceLandmarks().withFaceDescriptors();\n                extractFaceFromBox1(img1, face[0].detection._box);\n                if (face.length > 1) {\n                    dispatch(isSuccess(false));\n                    toast.error('Multiple faces found')\n                } else if (face.length == 0 || face == undefined) {\n                    dispatch(isSuccess(false));\n                    toast.error('Face Not Found')\n                } else {\n                    // localStorage.setItem('face_imgs1', face[0].descriptor)\n                    dsetTemplates(dTemplates => [...dTemplates, [face[0].descriptor].toString() + \"$$\"])\n\n                    // const did = localStorage.getItem(\"did_from_login\")\n                    // const newFtemplate = localStorage.getItem('face_imgs')\n                    // const data = { \"did\": did, \"attdid\": orgid + \"-\" + userData.attdid, \"fimg\": base64_image.slice(23), \"refimg\": myState.cameraRed, \"ftemplate\": [newFtemplate].toString(), \"dftemplate\": [newFtemplate].toString() }\n\n                }\n\n\n                setToggleMarkBtn(false);\n            } catch (e) {\n                // setToggleMarkBtn(false);\n                // toast.error('Face Not Found')\n\n            }\n            // if (face[0].descriptor === 512) {\n            dispatch(isSuccess(false));\n            // }\n            // setTemplate(face[0].descriptor);\n        } catch (error) {\n            console.log(error)\n            // toast.error(\"Please try again\")\n        }\n    }\n\n    const extractFaceFromBox = async (imageRef, box) => {\n        const regionsToExtract = [\n            new faceapi.Rect(box.x, box.y, box.width, box.height)\n        ];\n        let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n        if (faceImages.length === 0) {\n        } else {\n            faceImages.forEach((cnv) => {\n                // {imageset == true ?\n                // setExtractImage({img1:cnv.toDataURL()}):\n                // setExtractImage({img:cnv.toDataURL()})\n                // }\n\n                setCropImage(cnv.toDataURL())\n            })\n        }\n    }\n\n    const extractFaceFromBox1 = async (imageRef, box) => {\n        const regionsToExtract = [\n            new faceapi.Rect(box.x, box.y, box.width, box.height)\n        ];\n\n        let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n\n        if (faceImages.length === 0) {\n        } else {\n            faceImages.forEach((cnv) => {\n                setExtractImage(cnv.toDataURL())\n            })\n        }\n        //         setExtractImage({img1:cnv.toDataURL()})\n        // if (faceImages1.length === 0) {\n        // } else {\n        //     faceImages1.forEach((cnv) => {\n\n        //         // setCropImage(cnv.toDataURL())\n        //     })\n        // }\n        //         // setPic(cnv.toDataURL());\n        //     });\n        //     // setPic(faceImages.toDataUrl);\n        // }\n    }\n\n    const handleSubmit = async () => {\n        const did = localStorage.getItem('did_from_login')\n        // if (userData.attdid.length > 4 ) {\n\n        const data = { \"did\": did, \"attdid\": orgid + \"-\" + userData.attdid }\n        if (userData.attdid === \"\") {\n            setToggleMarkBtn(false);\n        }\n        dispatch(isSuccess(true));\n        dispatch(FaceEnGetDetailsAction(data))\n        // }\n        // else {\n        //     toast.error('Attendee ID Required')\n        // }\n\n        // if (!userData.attdid) {\n        //     setToggleMarkBtn(true);\n        // }\n    }\n\n    const handleCapture = async (target) => {\n        if (target.files) {\n            if (target.files.length !== 0) {\n                const file = target.files;\n                const list_file = []\n                for (let i = 0; i < file.length; i++) {\n                    console.log(i, 'index')\n                    // setSource(() => source + i)\n                    // list_file.append(`images[${i}]`, files[i])\n\n                    const image = await resizeFile(file[i]);\n                    runThis(image)\n\n\n                }\n                // if you want to create image link use below line\n                // const newUrl = URL.createObjectURL(file);\n                // if (image.slice(23)[0] === \"/\" || image.slice(23)[0] == \"i\") {\n                //     // dispatch(CameraAction(image.slice(23)))\n                //     setToggleMarkBtn(false)\n                //     setSource(image)\n                // };\n            }\n        } else {\n            console.log('eror')\n        }\n    }\n\n    const handleCaptureTwo = async (target) => {\n        if (target.files) {\n            if (target.files.length !== 0) {\n                const file = target.files\n                for (let i = 0; i < file.length; i++) {\n                    // list_file.append(`images[${i}]`, files[i])\n                    const image = await resizeFile(file[i]);\n                    runThisImage(image)\n                }\n\n                // const image1 = await resizeFile(file);\n\n\n                // if (image1.slice(23)[0] === \"/\" || image1.slice(23)[0] == \"i\") {\n                //     // dispatch(CameraAction(image1.slice(23)))\n                //     setToggleMarkBtn(false)\n                //     setSourceTwo(image1)\n                //     runThisImage(image1)\n                // } else {\n\n                // }\n\n                // if you want to create image link use below line\n                // const newUrl = URL.createObjectURL(file);\n                // getBase64Two(file).then(result => {\n                //     file[\"base64\"] = result;\n                //     setSourceTwo(file[\"base64\"])\n                //     if (file.base64.slice(23)[0] === \"/\" || file.base64.slice(23)[0] == \"i\") {\n                //         dispatch(CameraAction(file.base64.slice(23)))\n                //         runThis(sourceTwo);\n                //     } else {\n                //         toast.error(\"we accept only JPG and PNG\")\n                //         setSourceTwo(\"\")\n\n                //     }\n                // }).catch(err => {\n                // })\n            }\n        }\n    };\n\n    const secHandleSubmit = async () => {\n        const did = localStorage.getItem(\"did_from_login\")\n        // const newFtemplate = localStorage.getItem('face_imgs')\n        const newFtemplate1 = localStorage.getItem('face_imgs1')\n        const data = { \"did\": did, \"attdid\": orgid + \"-\" + userData.attdid, \"fimg\": CropImage.slice(22), \"refimg\": \"1234\", \"ftemplate\": Templates.toString(), \"dftemplate\": \"234\" }\n\n        // const data = { \"did\": did, \"attdid\": orgid + \"-\" + userData.attdid, \"fimg\": myState.cameraRed, \"refimg\": myState.cameraRed, \"ftemplate\": [newFtemplate].toString() }\n        // if (newFtemplate) {\n        dispatch(isSuccess(true));\n        dispatch(EnrollAttendeFaceAction(data));\n        setUserData({ attdid: \"\" });\n        setSource(\"\")\n        setSourceTwo(\"\")\n        setCropImage(\"\")\n        setExtractImage(\"\")\n        setToggleMarkBtn(true)\n        // }\n    }\n\n\n    const videoConstraints = {\n        width: 600,\n        height: 360,\n        facingMode: \"user\"\n    };\n\n    const handleClickOpen = (e) => {\n        e.preventDefault();\n        setToggleMarkBtn(true);\n        setOpen(true);\n\n    };\n\n    const handleClose = async () => {\n        // const image = localStorage.getItem('base_img')\n        // const img = await faceapi.fetchImage(image);\n        // try {\n        //     const face = await faceapi.detectAllFaces(img, new faceapi.TinyFaceDetectorOptions({ inputSize: 256 })).withFaceLandmarks().withFaceDescriptors();\n        //     if (face.length > 1) {\n        //         dispatch(isSuccess(false));\n\n        //         toast.error('Multiple faces found')\n        //     } else if (face.length == 0 || face == undefined) {\n        //         dispatch(isSuccess(false));\n\n        //         toast.error('Face Not Found')\n        //     } else {\n\n        //         localStorage.setItem('face_imgs', face[0].descriptor)\n        //     }\n\n        // } catch (e) {\n\n        // }\n        dispatch(isSuccess(false));\n        setOpen(false);\n    };\n\n    const handleClear = () => {\n        dispatch(isSuccess(false));\n        localStorage.removeItem(\"base_img\")\n    }\n\n    const getBase64 = file => {\n        return new Promise(resolve => {\n            // let fileInfo;\n            let baseURL = \"\";\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                baseURL = reader.result;\n                resolve(baseURL);\n            };\n        });\n    };\n\n    const getBase64Two = file => {\n        return new Promise(resolve => {\n            // let fileInfo;\n            let baseURL = \"\";\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                baseURL = reader.result;\n                resolve(baseURL);\n            };\n        });\n    };\n\n    const formFields = [\n        {\n            size: 13,\n            field: (\n                <>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input1\">Organization ID</label>\n                            <input type=\"text\" value={localStorage.getItem('orgid') + \"-\"} className=\"form-control\" id=\"Input1\" placeholder={1234} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input1\">Attendee ID Sequence</label>\n                            <input type=\"text\" value={userData.attdid} onChange={(e) => setUserData({ ...userData, attdid: e.target.value })} className=\"form-control\" id=\"Input1\" />\n                        </div>\n                    </div>\n                </>\n            ),\n        },\n    ];\n\n    const formFieldsTwo = [\n        {\n            size: 13,\n            field: (\n                <>\n                    <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input3\">Attendee Name</label>\n                            <input type=\"text\" className=\"form-control\" id=\"Input3\" value={myState.FaceGetDetails.attdname} placeholder=\"Attendee Name\" readOnly />\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input4\">Attendee ID/Code</label>\n                            <input type=\"text\" className=\"form-control\" id=\"Input4\" value={myState.FaceGetDetails.attdcode} placeholder=\"Attendee ID/Code\" readOnly />\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input5\">Class</label>\n                            <input type=\"text\" className=\"form-control\" id=\"Input5\" value={myState.FaceGetDetails.attdorg} placeholder=\"Class Name\" readOnly />\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input6\">Category</label>\n                            <input type=\"text\" className=\"form-control\" id=\"Input6\" value={myState.FaceGetDetails.attdcategory} placeholder=\"Category\" readOnly />\n                        </div>\n                    </div>\n\n\n                    <div className=\"col-md-2 \">\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card-body cus-div mb-2\">\n                            <input\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                id=\"icon-button-file\"\n                                type=\"file\"\n                                capture=\"environment\"\n                                multiple\n                                onChange={(e) => handleCapture(e.target)}\n                            />\n                            {console.log(source, 'asdf')}\n                            <Button className=\"w-100 m-0 p-0\" color=\"primary\">\n                                <label htmlFor=\"icon-button-file\">\n                                    <PermMediaRounded fontSize=\"large\" color=\"primary\" />\n                                    {/* { source != 1 ? <h6>{source}</h6> : null } */}\n                                    <h6 style={{ fontSize: '10px', marginTop: '2px', margin: 0, padding: 0 }}>Upload photo ID proof in jpg format</h6>\n                                    {source ?\n                                        <div display=\"flex\" justifyContent=\"center\" border={1}>\n                                            {source.map(img =>\n                                                // <img src={img} alt={\"snap\"} className=\"w-100 h-100 mb-2\" style={{ objectFit: 'cover' }}></img>\n                                                <PermMediaRounded fontSize=\"samll\" color=\"primary\" className=\"mx-1\" />\n\n                                            )}\n                                        </div> : null\n                                    }\n\n                                </label>\n                            </Button>\n                        </div>\n                    </div>\n                    {/* <div className=\"col-md-4\">\n                        <div className=\"card-body cus-div mb-2\">\n                            {sourceTwo ?\n                                <div display=\"flex\" justifyContent=\"center\" border={1}>\n                                    <img src={sourceTwo} alt={\"snap\"} className=\"w-100 h-100 mb-2\" style={{ objectFit: 'cover' }}></img>\n                                </div> : null\n                            }\n                            <input\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                id=\"icon-button-fileTwo\"\n                                type=\"file\"\n                                capture=\"environment\"\n                                multiple\n                                onChange={(e) => handleCaptureTwo(e.target)}\n                            />\n                            <Button className=\"w-100 m-0 p-0\" color=\"primary\">\n                                <label htmlFor=\"icon-button-fileTwo\">\n                                    <PermMediaRounded fontSize=\"large\" color=\"primary\" />\n                                    <h6 style={{ fontSize: '10px', marginTop: '2px', margin: 0, padding: 0 }}>Upload photo ID proof in jpg/jpeg format</h6>\n                                </label>\n                            </Button>\n                        </div>\n                    </div> */}\n                    {/* <div className=\"col-md-4\" >\n                        <div className=\"card-body cus-div\" >\n                            {base64_image ?\n                                <div display=\"flex\" justifyContent=\"center\" border={1} >\n                                    <img src={base64_image} alt={\"snap\"} className=\"w-100 h-100 mb-2\" style={{ objectFit: 'cover' }}></img>\n                                </div> : null\n                            }\n                            <Button className=\"w-100\" color=\"primary\" onClick={handleClickOpen}>\n                                <label htmlFor=\"icon-button-file\">\n                                    <PhotoCameraRounded fontSize=\"large\" color=\"primary\" />\n                                </label>\n                            </Button>\n                            <Dialog\n\n                                open={open}\n                                onClose={handleClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                                <DialogTitle id=\"alert-dialog-title\">\n                                    <Box display=\"flex\" alignItems=\"center\">\n                                        <Box flexGrow={1}></Box>\n                                        <Box>\n                                            <IconButton onClick={handleClose}>\n                                                <Close />\n                                            </IconButton>\n                                        </Box>\n                                    </Box>\n                                </DialogTitle>\n                                <DialogContent className=\"p-0 px-3\">\n                                    <DialogContentText id=\"alert-dialog-description\" style={{ width: \"580px\", height: \"500px\", margin: '0px' }}>\n                                        {base64_image ? <img src={`${base64_image}`} style={{ borderRadius: '5px', objectFit: 'cover', marginLeft: '5px', width: \"560px\", height: \"356px\", bordeRadius: \"5px\" }} alt=\"no img\" /> :\n                                            <div>\n                                                <Webcam\n                                                    className=\"w-100\"\n                                                    width={350}\n                                                    height={300}\n                                                    ref={webcamRef}\n                                                    screenshotFormat=\"image/jpeg\"\n                                                    videoConstraints={videoConstraints}\n                                                />\n                                                <button className=\"btn bg-gradient-info w-50\" style={{ margin: 'auto', justifyContent: 'center', display: 'flex', marginTop: '15px' }} onClick={capture}>  Capture photo</button>\n\n\n                                            </div>\n                                        }\n                                    </DialogContentText>\n                                    <DialogContentText id=\"alert-dialog-description\" className=\"alert-dialog-description\"\n                                        style={{ width: \"425px\", height: \"400px\", margin: '0px' }}\n                                    >\n\n                                        {\n                                            imgSrcs.map(imgSrc =>\n                                                <img src={imgSrc} alt=\"\" />\n                                            )\n                                        }\n                                        <Webcam\n                                            className=\"w-100\"\n                                            // width=\"100%\"\n                                            // height= \"auto\"\n                                            width={600}\n                                            height={360}\n                                            ref={webcamRef}\n                                            screenshotFormat=\"image/jpeg\"\n                                            videoConstraints={videoConstraints}\n                                        />\n                                        <button className=\"btn bg-gradient-info w-50\" style={{ margin: 'auto', justifyContent: 'center', display: 'flex', marginTop: '15px' }} onClick={capture}>  Capture photo</button>\n\n                                        {base64_image ? <img className=\"captureimage\" src={`${base64_image}`} style={{\n                                            borderRadius: '5px', objectFit: 'cover',\n                                            // marginLeft: '0px', \n                                            // width: \"425px\", height: \"356px\",\n                                            bordeRadius: \"5px\"\n                                        }} alt=\"no img\" /> :\n                                            <div className=\"webcamlength\" style={{\n                                                position: \"absolute\",\n                                                width: \"90%\",\n\n                                            }}>\n                                                <Webcam\n                                                    className=\"w-100\"\n                                                    // width=\"100%\"\n                                                    // height= \"auto\"\n                                                    width={600}\n                                                    height={360}\n                                                    ref={webcamRef}\n                                                    screenshotFormat=\"image/jpeg\"\n                                                    videoConstraints={videoConstraints}\n                                                />\n                                                <button className=\"btn bg-gradient-info w-50\" style={{ margin: 'auto', justifyContent: 'center', display: 'flex', marginTop: '15px' }} onClick={capture}>  Capture photo</button>\n\n\n                                            </div>\n                                        }\n                                    </DialogContentText>\n\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button className=\"btn bg-gradient-info w-50 mb-3 mx-3\" onClick={handleClear} color=\"primary\">\n                                        Re-Capture\n                                    </Button>\n                                    <Button disabled={toggleMarkBtn} className=\"btn bg-gradient-info w-50 mb-3 mx-3\" onClick={handleClose} color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n\n                        </div>\n                    </div> */}\n\n                </>\n            ),\n        },\n    ];\n\n    const { containerProps, indicatorEl } = useLoading({\n        loading: true,\n        indicator: <Oval width=\"50\" style={{ textAlign: 'center', justifyContent: 'center', margin: '0 auto', top: \"50%\", left: \"0\", right: \"0\", bottom: \"0\", position: 'fixed', zIndex: '300000' }} />,\n\n    });\n\n    return (\n        <Aux>\n            <div className=\"container-fluid py-4 \">\n                <ToastContainer />\n                <section {...containerProps}>\n                    {myState.isSuccess ? indicatorEl : null}\n                </section>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card \">\n                            <div className=\"card-header pb-0 p-3\">\n                                <h6 className=\"mb-0\">Attendee Face Enrollment</h6>\n                            </div>\n                            <div className=\"card-body p-3\">\n                                <form>\n                                    {formFields.map((item, idx) => (\n                                        <div className=\"row\" item xs={item.size} key={idx}>\n                                            {item.field}\n                                        </div>\n                                    ))}\n                                    <div className=\"text-center\">\n                                        <button type=\"button\" onClick={handleSubmit} className=\"btn bg-gradient-info w-100 mt-1 mb-0\">Get Details</button>\n                                    </div>\n                                </form>\n                                <br />\n                            </div>\n                            <div className=\"card-body p-3\" disabled={toggleMarkBtn}>\n\n                                <form>\n                                    {formFieldsTwo.map((item, idx) => (\n                                        <div className=\"row\" item xs={item.size} key={idx}>\n                                            {item.field}\n                                        </div>\n                                    ))}\n                                    <div className=\"text-center\">\n                                        <button type=\"button\" onClick={secHandleSubmit} disabled={toggleMarkBtn} style={{ zIndex: 30000 }} className=\"btn bg-gradient-info w-100 mt-4 mb-0\">Enroll Face</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default Face_enrollment;","import React, { useEffect } from 'react';\nimport '../../App.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Aux from '../../hoc/Aux';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ResetLogin, SyncDataAction, SyncDataOnButtonAction, isSuccess } from '../../Store/Actions/action';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as faceapi from 'face-api.js';\nimport { useLoading, Oval } from '@agney/react-loading';\n\nconst Home = (props) => {\n  const dispatch = useDispatch()\n  const loader = useSelector((state) => state.vbas_store)\n\n  const did = localStorage.getItem('did_from_login')\n  const orgid = localStorage.getItem('orgid')\n  const orgname = localStorage.getItem('orgname')\n\n  const syncData = () => {\n    const data = { \"did\": did, \"lastsyncdate\": Date().toLocaleString().slice(0, 24), \"syncflag\": \"0\" }\n    dispatch(isSuccess(true));\n    dispatch(SyncDataAction(data))\n    // console.log(`loader.SyncData`, loader.SynData);\n  }\n\n  const syncDataButton = () => {\n    const data = { \"did\": did, \"lastsyncdate\": Date().toLocaleString().slice(0, 24), \"syncflag\": \"0\" }\n    dispatch(isSuccess(true));\n    dispatch((SyncDataOnButtonAction(data)))\n\n  }\n\n  useEffect(() => {\n    loader.videostop?.srcObject?.getTracks().forEach((track) => {\n      track.stop();\n  })\n\n    syncData();\n    dispatch(ResetLogin());\n  }, [])\n\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + '/models/';\n      Promise.all([\n        faceapi.nets.mtcnn.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n      ])\n    }\n    loadModels();\n  }, [])\n\n\n  const { containerProps, indicatorEl } = useLoading({\n    loading: true,\n    indicator: <Oval width=\"50\" style={{ textAlign: 'center', justifyContent: 'center', margin: '0 auto', top: \"50%\", left: \"0\", right: \"0\", bottom: \"0\", position: 'fixed' }} />,\n  });\n\n  return (\n    <Aux>\n      <ToastContainer />\n      <section {...containerProps} >\n        {loader.isSuccess ? indicatorEl : null}\n      </section>\n\n      <div className=\"container-fluid py-4\">\n        <div className=\"row\">\n          <div className=\"col-12 col-xl-4 mb-2\">\n            <div className=\"card \">\n              <div className=\"card-header pb-0 p-3\">\n                <h6 className=\"mb-0\">Device ID</h6>\n              </div>\n              <div className=\"card-body p-3\">\n\n                <h4 className=\"text-sm\">\n                  {did}\n                </h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-12 col-xl-4 mb-2\">\n            <div className=\"card \">\n              <div className=\"card-header pb-0 p-3\">\n                <h6 className=\"mb-0\">Organization ID</h6>\n              </div>\n              <div className=\"card-body p-3\">\n\n                <h4 className=\"text-sm\">\n                  {orgid}\n                </h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-12 col-xl-4 mb-2\">\n            <div className=\"card \">\n              <div className=\"card-header pb-0 p-3\">\n                <h6 className=\"mb-0\">Organization Name</h6>\n              </div>\n              <div className=\"card-body p-3\">\n\n                <h4 className=\"text-sm \">\n                  {orgname}\n                </h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <button className=\"btn bg-gradient-info  my-4\" onClick={syncDataButton}>Sync Data</button>\n          </div>\n        </div>\n      </div>\n    </Aux>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Aux from '../../hoc/Aux';\nimport { isSuccess, SyncDataAction, videoStop, markChecklist, ClearCheckLiveness, onlyMarkedStudentsListAction } from '../../Store/Actions/action';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as faceapi from 'face-api.js';\nimport { useLoading, Oval } from '@agney/react-loading';\n\nconst Mark_attendance = (props) => {\n    const Mark = useSelector((state) => state.vbas_store)\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [newState, setState] = useState();\n    const [changeAttdcode, setChangeAttdcode] = useState(\"\");\n    const [ListAttened, setListAttened] = useState([]);\n    const [onlyAttdcode, setonlyAttdcode] = useState([]);\n    const [toggleMarkBtn, setToggleMarkBtn] = useState(true);\n    const [facingMode, setFacingMode] = useState(true);\n    const [disabledBtn, setdisabledBtn] = useState(true);\n    const [ShowList, setShowList] = useState(true);\n    const [ClonedList, setClonedList] = useState([]);\n    const [modelLoading, setModelsState] = useState(\"Loaded\");\n\n\n\n    // const [stopVideo, setStopVideo] = useState(false);\n    // const [videoStream, setVideoStream] = useState({});\n    const did = localStorage.getItem('did_from_login');\n    var infinite = [];\n    const videoRef = useRef();\n    const canvasRef = useRef();\n\n    useEffect(() => {\n        dispatch(ClearCheckLiveness());\n        const did = localStorage.getItem('did_from_login')\n        const data = { \"did\": did, \"lastsyncdate\": Date().toLocaleString().slice(0, 24), \"syncflag\": \"0\" }\n        const data1 = videoRef?.current\n        dispatch(SyncDataAction(data))\n        dispatch(videoStop(data1))\n\n    }, [])\n\n    useEffect(() => {\n        setModelsState(\"loading..\")\n        setTimeout(() => {\n            const loadModels = async () => {\n                const MODEL_URL = process.env.PUBLIC_URL + '/models/';\n                Promise.all([\n                    faceapi.nets.tinyFaceDetector.loadFromUri(process.env.PUBLIC_URL + '/models/'),\n                    // faceapi.nets.mtcnn.loadFromUri(MODEL_URL),\n                    faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n                    faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n                ]).then(startVideo);\n            }\n            loadModels();\n        }, 1000);\n    }, [])\n\n    const attdcodesList = Array.from(new Set(onlyAttdcode));\n    let newVar = [];\n    if (attdcodesList.length > 0) {\n        // newVar = ListAttened.filter((user, i, self) => user.attdcode == attdcodesList.find((t) => (\n        //     t == user.attdcode \n        // )))\n        // const sorting = ListAttened\n        // const sorting = ListAttened.sort((a, b) => (a.count - b.count))\n        attdcodesList.forEach((item, id) => {\n\n            for (let user of ListAttened) {\n                if (item === user.attdcode) {\n                    newVar.push(user)\n                    return\n                }\n            }\n        })\n\n        // ListAttened.map((user, i) => {\n        //     if (i == attdcodesList.indexOf(user.attdcode)) {\n        //         console.log(i, attdcodesList.indexOf(user.attdcode))\n        //         return user\n        //     }\n        // })\n        // console.log(ListAttened, 'copy');\n\n    } else {\n        newVar = ListAttened\n    }\n\n\n\n    useEffect(() => {\n        onlyMarkedStudentsListAction(newVar)\n    }, [newVar])\n\n\n    const startVideo = () => {\n        setModelsState(\"Loaded\")\n        setClonedList(Mark?.SynData);\n        try {\n            navigator.getUserMedia = (navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia);\n\n            const supports = navigator.mediaDevices.getSupportedConstraints();\n            if (!supports['facingMode']) {\n                alert('This browser does not support facingMode!');\n            } else {\n                console.log(supports['facingMode'], 'error')\n            }\n            const options = {\n                audio: false,\n                video: {\n                    facingMode: facingMode ? 'environment' : 'user',\n                },\n            };\n            navigator?.mediaDevices?.getUserMedia(options)\n                .then(function (stream) {\n                    var video = videoRef.current;\n                    // Older browsers may not have srcObject\n                    if (\"srcObject\" in video) {\n                        video.srcObject = stream;\n                    } else {\n                        // Avoid using this in new browsers, as it is going away.\n                        video.src = window.URL.createObjectURL(stream);\n                    }\n                    video.onloadedmetadata = function (e) {\n                        video.play();\n                    };\n                    setdisabledBtn(false);\n                })\n                .catch(function (err) {\n                    // console.log(\"it;s me\")\n\n                });\n\n        } catch (error) {\n            // console.log(error, 'eror')\n        }\n    }\n\n    const formatedTimestamp = () => {\n        const d = new Date()\n        const date = d.toISOString().split('T')[0];\n        const time = d.toTimeString().split(' ')[0];\n        return `${date} ${time}`\n    }\n\n    // const videoConstraints = {\n    //     width: 500,\n    //     height: 350\n    // };\n\n    // const validate = values => {\n    //     const errors = {};\n    //     if (!values.firstName) {\n    //         errors.firstName = 'Required';\n    //     }\n    //     if (!values.lastName) {\n    //         errors.lastName = 'Required';\n    //     }\n    //     if (!values.email) {\n    //         errors.email = 'Required';\n    //     }\n    //     return errors;\n    // };\n\n    // const markMe = () => {\n    //     const data = {\n    //         \"did\": did,\n    //         \"logs\":\n    //             [\n    //                 { \"refid\": changeAttdcode, \"txntype\": \"1\", \"aid\": \"2\", \"sessionid\": \"0\", \"timestamp\": formatedTimestamp() }\n    //             ]\n    //     }\n    //     // console.log(data, 'api data')\n    //     dispatch(isSuccess(true));\n    //     dispatch(MarkAttendeeAction(data));\n    //     clearInterval(newState);\n    //     setChangeAttdcode(\"\");\n    //     setToggleMarkBtn(false);\n    //     // handlerCloseCam();\n\n    //     // for (var i = 0; i < videoRef.current.length; i++) {\n    //     //     if (videoRef.current[i].Stop) { videoRef.current[i].Stop(); }\n    //     // }\n    //     // videoRef.current.srcObject.getTracks().forEach((track) => {\n    //     //     track.stop();\n    //     //     console.log(videoRef.current.srcObject);\n    //     // });\n    //     setTimeout(() => {\n    //         handlerCloseCam();\n    //     }, 2000);\n    // }\n\n    const handlerCloseCam = () => {\n        videoRef?.current?.srcObject.getTracks().forEach((track) => {\n            track.stop();\n            // console.log(videoRef.current.srcObject, '===');\n        });\n        // document.getElementById('video_overlays').remove();\n        setToggleMarkBtn(true);\n    }\n\n\n    const handleVideoOnPlay = async () => {\n        const displaySize = {\n            height: 510,\n            width: 670\n        }\n        const cInterval = setInterval(async () => {\n            setState(cInterval);\n            try {\n\n                const referenceImage = await faceapi?.createCanvasFromMedia(videoRef.current);\n                faceapi?.matchDimensions(canvasRef.current, displaySize)\n\n                let fullFaceDescriptions = await faceapi?.detectAllFaces(referenceImage, new faceapi.TinyFaceDetectorOptions({ inputSize: 256 })).withFaceLandmarks().withFaceDescriptors()\n                faceapi.resizeResults(fullFaceDescriptions, displaySize);\n                canvasRef.current?.getContext('2d').clearRect(0, 0, displaySize.width, displaySize.height);\n                faceapi.draw.drawDetections(canvasRef?.current, fullFaceDescriptions)\n                const syncDataArr = Mark.SynData\n                // const syncDataArr = JSON.parse(localStorage.getItem('syncdata'));\n\n                // var count = 0\n                let labeledFaceDescriptors = [];\n                for (const item of syncDataArr) {\n                    item.ftemplate.split(\"$$\").map((templateItem, i) => {\n                        var convertTemplate = templateItem.split(\",\").splice(0, 128).filter(Boolean)\n                        if (convertTemplate.length == 128) {\n                            const faceDescriptors = [Float32Array.from(convertTemplate)];\n                            labeledFaceDescriptors.push(new faceapi.LabeledFaceDescriptors(item.attdname.toString() + \" \" + item.attdcode.toString(), faceDescriptors))\n                        }\n                        else {\n\n                        }\n                    })\n\n                }\n                const maxDescriptorDistance = 0.8\n                const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, maxDescriptorDistance)\n                try {\n                    const results = fullFaceDescriptions.map(fd => faceMatcher.findBestMatch(fd.descriptor))\n                    results.forEach((bestMatch, index) => {\n                        const box = fullFaceDescriptions[index]?.detection.box\n                        const text = bestMatch.toString()\n                        var r = /\\d+/;\n                        var arrayData = [];\n                        var count = 0;\n                        var today = new Date();\n                        var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n                        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n                        var dateTime = date + ' ' + time;\n                        if (text?.match(r)[0] != 0) {\n                            Mark.SynData.map((userDetails, i) => {\n\n                                if (userDetails.attdcode == text?.match(r)[0]) {\n                                    if (userDetails.attdcode != text?.match(r)[0]) {\n                                    } else {\n                                        var newObject = userDetails\n                                        count = count + 1\n                                        newObject['distance'] = results[index]._distance.toFixed(2)\n                                        newObject['count'] = i\n                                        newObject['time'] = dateTime\n                                        let copyListAttened = [...ListAttened]\n                                        copyListAttened.push(newObject)\n                                        // const unique = [copyListAttened.map((o) => JSON.stringify(o.attdcode))]\n                                        // console.log(unique, 'unique')\n\n                                        // let duplicateListattened = copyListAttened.filter((o) => o.attdcode == newObject.attdcode)\n                                        // if (duplicateListattened.length >= 2) {\n                                        //     copyListAttened.push(newObject);\n                                        //     setListAttened(prevState => [...prevState, newObject])\n\n                                        // } else if (duplicateListattened.length == 0) {\n                                        setListAttened(ListAttened => [newObject, ...ListAttened])\n\n                                        // }\n                                        // console.log(newObject)\n                                        // arrayData.push(text?.match(r)[0])setListAttened\n\n                                        // let copyattdcodes = [...onlyAttdcode]\n\n                                        // copyattdcodes.push(text?.match(r)[0]);\n                                        // let dup = new Set(copyattdcodes)\n                                        // let convertSetArray = Array.from(dup)\n                                        // copyListAttened.map((user, i) => {\n                                        //     if (i == convertSetArray.indexOf(user.attdcode)) {\n                                        //         return {\n                                        //             ...user,\n                                        //             distance: results[index]._distance.toFixed(2),\n                                        //             count: count\n\n                                        //         }\n\n                                        //     }\n                                        // })\n                                        // console.log(copyListAttened , 'copy');\n                                        // setListAttened()\n                                        setonlyAttdcode(onlyAttdcode => {\n                                            return [text?.match(r)[0], ...onlyAttdcode]\n                                        })\n\n\n\n\n\n                                        // let duplicateListattened = copyListAttened.filter((value, index) =>\n                                        //         value.attdcode !== newObject.attdcode\n                                        // )\n                                        // let duplicateListattened = copyListAttened.filter((value, index, self) =>\n                                        //     // console.log(value, index, self)\n                                        //     index === self.findIndex((t) => (\n                                        //         t.attdcode === value.attdcode\n                                        //     ))\n\n                                        // )\n                                        // console.log(duplicateListattened, 'dup', newObject)\n                                        // setListAttened(prevState => [...new Set(prevState), text?.match(r)[0]])\n                                        // if (typeof (newObject) != undefined) {\n                                        // setMarkAttendance(MarkAttendance => [...MarkAttendance, newObject]);\n                                        // }\n                                    }\n                                }\n\n\n                            })\n\n                        }\n\n                        setChangeAttdcode(text?.match(r)[0]);\n                        if (text.includes('unknown')) {\n                            const drawOptions = {\n                                anchorPosition: 'TOP_LEFT',\n                                backgroundColor: 'rgba(200, 200, 200, 0.5)',\n                                boxColor: 'red',\n                                lineWidth: 6\n                            }\n                            const drawBox = new faceapi.draw.DrawBox(box, { label: text.slice(0, -6) + results[index].distance.toFixed(2) }, drawOptions)\n                            return drawBox.draw(canvasRef.current)\n\n                        } else {\n                            // const drawOptions = {\n                            //     backgroundColor: 'green'\n                            // }\n\n                            const drawOptions = {\n                                backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                                label: text.slice(0, -6) + results[index].distance.toFixed(2),\n                                boxColor: 'green',\n                                lineWidth: 6\n                            }\n                            const drawBox = new faceapi.draw.DrawBox(box, drawOptions)\n                            // setToggleMarkBtn(false);\n                            return drawBox.draw(canvasRef.current)\n                        }\n                    })\n                } catch (error) {\n                    console.log(error, 'canvas');\n                }\n\n            } catch (error) {\n                // console.log(error, 'er');\n            }\n        }, 1000)\n\n    }\n\n    const { containerProps, indicatorEl } = useLoading({\n        loading: true,\n        indicator: <Oval width=\"50\" style={{ textAlign: 'center', justifyContent: 'center', margin: '0 auto', top: \"50%\", left: \"0\", right: \"0\", bottom: \"0\", position: 'fixed', zIndex: '1' }} />,\n\n    });\n\n    const backToHome = () => {\n        handlerCloseCam();\n        history.push('/home')\n    }\n    const markAttendence = () => {\n        handlerCloseCam();\n        const attdcodesList = Array.from(new Set(onlyAttdcode));\n        if (attdcodesList.length > 0) {\n            dispatch(markChecklist(attdcodesList))\n        }\n\n        history.push('/mark_attendancetable')\n    }\n\n    const toggleCameraBtn = () => {\n        // const tracks = stream.getTracks();\n        // tracks.forEach(track => track.stop());\n        videoRef?.current?.srcObject.getTracks().forEach((track) => {\n            track.stop();\n        });\n\n        setFacingMode(!facingMode);\n        startVideo();\n\n\n    }\n\n\n    // var removeDuplicate = ListAttened.filter(function(item, i) {\n    //     // Mark.SynData.map((user, i) => {\n    //     //     if(user.attdcode == item.attdcode){\n    //     //         console.log(user, 'us');\n\n    //     //     }\n    //     // })\n    // })\n    // const attdcodesList = Array.from(new Set(onlyAttdcode));\n    // // console.log(attdcodesList,\"attdcodesList\")\n\n    // let newVar = [];\n    // if (attdcodesList.length > 0) {\n    //     // newVar = ListAttened.filter((user, i, self) => user.attdcode == attdcodesList.find((t) => (\n    //     //     t == user.attdcode \n    //     // )))\n    //     // const sorting = ListAttened\n    //     // const sorting = ListAttened.sort((a, b) => (a.count - b.count))\n    //     attdcodesList.forEach((item, id) => {\n\n    //         for (let user of ListAttened) {\n    //             if (item === user.attdcode) {\n    //                 newVar.push(user)\n    //                 return\n    //             }\n    //         }\n    //     })\n\n    //     // ListAttened.map((user, i) => {\n    //     //     if (i == attdcodesList.indexOf(user.attdcode)) {\n    //     //         console.log(i, attdcodesList.indexOf(user.attdcode))\n    //     //         return user\n    //     //     }\n    //     // })\n    //     // console.log(ListAttened, 'copy');\n\n    // } else {\n    //     newVar = ListAttened\n\n    // }\n\n\n\n    const newFunc1 = (value, n) => {\n        const iconDisplay = newVar.filter(function (code) {\n            if (code.attdcode == value.attdcode) {\n                return true\n            } else {\n                return false\n\n            }\n        })\n\n\n        return (\n            <div className='res-box p-2 mt-3'>\n                <div className='row'>\n                    <div className='col-7 align-middle px-3 my-2'>\n                        <p className='text-bold m-0 cus-f'>{value?.attdname}</p>\n                        {/* <p className='m-0 cus-f'> {value.attdid}</p> */}\n                        <p className='m-0 cus-f'> {value?.attdid}\n                            {\n                                iconDisplay.length == \"0\" ?\n                                    <span className=\"p-2\"\n                                    // style ={{    backgroundColor: \"red\",\n                                    // borderRadius:\" 50%\"}}\n                                    >\n                                        <i class=\"fa fa-times icon-fon\" aria-hidden=\"true\" style={{ color: \"red\" }}> </i>\n                                    </span> :\n                                    <span className=\"p-2\"\n                                    // style ={{    backgroundColor: \"red\",borderRadius:\" 50%\"}}\n                                    >\n                                        <i class=\"fa fa-check icon-fon\" aria-hidden=\"true\" style={{ color: \"green\" }}> </i>\n                                    </span>\n                            }\n\n\n                        </p>\n                    </div>\n                    <div className='col-5 text-right'>\n                        <img src={`data:image/jpeg;base64,${value.fimg}`} width=\"70px\" className=\"userImage\" />\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n\n\n    return (\n        <Aux>\n            <main className=\"main-content mt-1 border-radius-lg\">\n                <ToastContainer />\n                <section {...containerProps}>\n                    {Mark.isSuccess ? indicatorEl : null}\n                </section>\n                <div className=\"container-fluid py-4 \">\n                    <div className=\"row p-0\">\n                        <div className=\"col-8\">\n                            <div className=\"card \">\n                                <div className=\"card-body p-3\">\n                                    <h1 style={{ textAlign: \"center\", margin: \"1% auto 2%\" }}>Mark Attendance</h1>\n                                    <div className=\"row\" style={{ textAlign: \"center\", margin: \"2% auto 2%\" }}>\n                                        <p>Models {modelLoading}</p>\n                                        <div id=\"wrap_video\">\n                                            <div id=\"video_box\">\n                                                <div>\n                                                    <canvas ref={canvasRef} id=\"video_overlays\" style={{ width: \"81%\", height: \"auto\" }} />\n                                                    <video id=\"player\" ref={videoRef} onPlay={handleVideoOnPlay} autoPlay muted style={{ borderRadius: \"32px\", background: \"#E8E8E8\", boxShadow: \"inset 7px 7px 20px #c5c5c5, inset -2px -7px 16px #ffffff\", width: \"85%\", height: \"auto\" }} />\n                                                </div>\n                                                <button onClick={toggleCameraBtn} disabled={disabledBtn ? \"true\" : false} className=\"btn bg-gradient-info w-45 mx-2 my-3\">Toggle Camera</button>\n                                                <button onClick={backToHome} disabled={disabledBtn ? \"true\" : false} className=\"btn w-40 mx-2 my-3\">Back to Home</button>\n                                                {attdcodesList.length > 0 ?\n                                                    <button onClick={markAttendence} className=\"btn w-40 mx-2 my-3\">Mark Attendence Table</button>\n                                                    :\n                                                    <button onClick={markAttendence} className=\"btn w-40 mx-2 my-3\" disabled>Mark Attendence Table</button>\n                                                }\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='col-4 card fix-srl pb-4' >\n                            <div className='p-1'>\n                                <h3 className='mt-3 text-center' >Results - ({new Set(newVar.filter(name => name.aid)).size}/{Mark.SynData.length})</h3>\n                                <button className={ShowList == true ? `btn bg-gradient-info w-45 mx-2 my-3` : `btn w-45 mx-2 my-3`} onClick={() => setShowList(true)}>\n                                    <i class=\"fa fa-check icon-fon\" aria-hidden=\"true\"> </i>\n                                </button>\n                                <button className={ShowList == true ? `btn  w-40 mx-2 my-3` : `btn bg-gradient-info w-40 mx-2 my-3`} onClick={() => setShowList(false)}>\n                                    {/* <i class=\"fa fa-times icon-fon\" aria-hidden=\"true\"> </i> */}\n                                    All\n                                </button>\n                                {\n                                    ShowList ? newVar.filter(user => user != undefined).map((val, key) =>\n                                        <>\n                                            {\n                                                <>\n                                                    <div className='res-box p-2 mt-3'>\n                                                        <div className='row'>\n                                                            <div className='col-7 align-middle px-3 my-2'>\n                                                                <p className='text-bold m-0 cus-f'>{val.attdname}</p>\n                                                                <p className='m-0 cus-f'> {val.attdid} </p>\n                                                                <p className='m-0 cus-f'> {val.distance}<span className=\"p-2\"\n                                                                // style ={{    backgroundColor: \"red\",borderRadius:\" 50%\"}}\n                                                                >\n                                                                    <i class=\"fa fa-check icon-fon\" aria-hidden=\"true\" style={{ color: \"green\" }}> </i>\n                                                                </span></p>\n                                                                <p className='m-0 cus-f'> {val.time}</p>\n                                                                {/* <p className='m-0 cus-f'> {new Set(ListAttened.reverse().filter(name => name.includes(val.attdid.split('-')[1].split(\"_\"))))} {new Set(ListAttened.reverse().filter(name => name.includes(val.attdid.split('-')[1]))).size == \"0\" ?\n                                                                    <i class=\"fa fa-times icon-fon\" aria-hidden=\"true\"> </i> :\n                                                                    <>\n                                                                        <i class=\"fa fa-check icon-fon\" aria-hidden=\"true\"> </i>\n                                                                    </>\n                                                                }   </p> */}\n                                                            </div>\n                                                            <div className='col-5'>\n                                                                <img src={`data:image/jpeg;base64,${val.fimg}`} width=\"70px\" className=\"userImage\" />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </>\n                                            }\n                                        </>\n                                    ) : null\n                                }\n                                {\n                                    ShowList ? null : Mark?.SynData.map((value, i) =>\n                                        newFunc1(value)\n\n\n                                        // <div className='res-box p-2 mt-3'>\n                                        //     <div className='row'>\n                                        //         <div className='col-7 align-middle px-3 my-2'>\n                                        //             <p className='text-bold m-0 cus-f'>{value.attdname}</p>\n                                        //             {/* <p className='m-0 cus-f'> {value.attdid}</p> */}\n                                        //             <p className='m-0 cus-f'> {value.attdid}\n                                        //             {newFunc1(value)}\n\n                                        //                 {/* {newVar.filter(user => user != undefined).map((val, key) => val.attdcode == value.attdcode ?\n                                        //                     <i class=\"fa fa-check icon-fon\" aria-hidden=\"true\"> </i>\n\n                                        //                     :\n                                        //                     <>\n                                        //                         <i class=\"fa fa-times icon-fon\" aria-hidden=\"true\"> </i>\n                                        //                     </>\n\n                                        //                 )} */}\n                                        //             </p>\n\n                                        //             {/* <p className='m-0 cus-f'> {value.attdid}\n                                        //                 {new Set(ListAttened.filter(name => name.includes(value.attdid.split('-')[1]))).size == \"0\" ?\n                                        //                     <i class=\"fa fa-times icon-fon\" aria-hidden=\"true\"> </i>\n                                        //                     :\n                                        //                     <>\n                                        //                         <i class=\"fa fa-check icon-fon\" aria-hidden=\"true\"> </i>\n\n                                        //                     </>\n                                        //                 }   </p> */}\n                                        //             {/* <i class=\"fa fa-times icon-fon\" aria-hidden=\"true\"> </i> */}\n\n                                        //         </div>\n                                        //         <div className='col-5 text-right'>\n                                        //             <img src={`data:image/jpeg;base64,${value.fimg}`} width=\"70px\" className=\"userImage\" />\n                                        //         </div>\n                                        //     </div>\n                                        // </div>\n                                    )\n                                }\n                            </div>\n                        </div>\n                    </div>\n\n                    <br />\n                    <br />\n                    <br />\n                </div>\n            </main>\n        </Aux>\n\n    );\n}\n\n\n\nexport default Mark_attendance;","import React, { useEffect, useRef, useState } from 'react';\nimport Aux from '../../hoc/Aux';\nimport { FaceEmbedAction, synData, MarkAttendeeAction } from '../../Store/Actions/action';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as faceapi from 'face-api.js';\n\n\nconst Mark_attendance2 = (props) => {\n\n    const Mark = useSelector((state) => state.vbas_store)\n    const captureResp = Mark?.MarkEmbedRedcuer;\n    const dispatch = useDispatch();\n\n    const [clearTimeInterval, setClearTimeInterval] = useState();\n    const [base64_image, setBase64_image] = useState('');\n    const [open, setOpen] = useState(false);\n    const did = localStorage.getItem('did_from_login');\n    const videoRef = useRef();\n    const canvasRef = useRef();\n\n\n    useEffect(() => {\n        loadModels();\n        console.log(videoRef);\n\n    }, [])\n\n    useEffect(() => {\n        var cInterval;\n        if (canvasRef) {\n            cInterval = setInterval(() => {\n                console.log(\"==================1\");\n                handleVideoOnPlay()\n                setClearTimeInterval(cInterval);\n            }, 1000);\n        }\n        return () => {\n            clearInterval(cInterval)\n        }\n    }, [])\n\n    \n\n    const loadModels = async () => {\n        console.log(\"==================function\");\n        const MODEL_URL = process.env.PUBLIC_URL + '/models';\n        // Promise.all([\n        await faceapi?.nets?.tinyFaceDetector?.loadFromUri(MODEL_URL);\n        await faceapi?.nets?.faceLandmark68Net?.loadFromUri(MODEL_URL);\n        await faceapi?.nets?.faceRecognitionNet?.loadFromUri(MODEL_URL);\n        // faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)\n        // faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        // faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n        // faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)\n        await startVideo()\n        // ]).then(resp => {\n        //     console.log(\"==================2\");\n        //     console.log(resp);\n        // });\n    }\n\n    const startVideo = () => {\n        console.log(\"==================cam\");\n        if(!videoRef.current || !canvasRef.current) return;\n        navigator.getUserMedia(\n            { video: {} },\n            stream => videoRef.current.srcObject = stream,\n            err => console.error(err)\n        )\n    }\n\n    // const captureImage = () => {\n    //     const did = localStorage.getItem('did_from_login')\n    //     const imageSrc = webcamRef?.current?.getScreenshot({ width: 1920, height: 1080 });\n    //     const data = { \"txnid\": did, \"image\": imageSrc?.slice(23) }\n    //     setBase64_image(imageSrc)\n    //     dispatch(MarkEmbedAction(data, formatedTimestamp))\n\n    //     // setImage(Mark.MarkEmbedRedcuer.data.resp_data.resp_image)\n    //     // debugger\n    // }\n\n\n    // const video = document.getElementById('video')\n    // const MODEL_URL = process.env.PURLIC_URL + './models';\n\n\n    // video.addEventListener('play', () => {\n    //     const canvas = faceapi.createCanvasFromMedia(video)\n    //     console.log(canvas, '-----')\n    //     document.body.append(canvas)\n    //     const displaySize = { width: video.width, height: video.height }\n    //     faceapi.matchDimensions(canvas, displaySize)\n    //     setInterval(async () => {\n    //         const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions()\n    //         const resizedDetections = faceapi.resizeResults(detections, displaySize)\n    //         canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\n    //         faceapi.draw.drawDetections(canvas, resizedDetections)\n    //         faceapi.draw.drawFaceLandmarks(canvas, resizedDetections)\n    //         faceapi.draw.drawFaceExpressions(canvas, resizedDetections)\n    //     }, 100)\n    // })\n    // const MarkEmbed = React.useCallback(\n    //     () => {\n    //         const did = localStorage.getItem('did_from_login')\n    //         const imageSrc = webcamRef.current.getScreenshot({ width: 1920, height: 1080 });\n    //         const data = { \"txnid\": did, \"image\": imageSrc.slice(23) }\n    //         setBase64_image(imageSrc)\n    //         dispatch(MarkEmbedAction(data, formatedTimestamp))\n\n    //         // setImage(Mark.MarkEmbedRedcuer.data.resp_data.resp_image)\n    //         // debugger\n    //         if (Mark.MarkEmbedRedcuer.respcode === '200') {\n    //             setImage(Mark.MarkEmbedRedcuer.data.resp_data.resp_image)\n    //             // console.log(Image)\n    //         }\n    //     },\n    //     [webcamRef]\n    // );\n\n    // const setInt = setInterval(MarkEmbed, 10000)\n\n    const formatedTimestamp = () => {\n        const d = new Date()\n        const date = d.toISOString().split('T')[0];\n        const time = d.toTimeString().split(' ')[0];\n        return `${date} ${time}`\n    }\n\n    const videoConstraints = {\n        width: 500,\n        height: 350\n    };\n\n    const handleClickOpen = (e) => {\n        e.preventDefault();\n        setOpen(true);\n    };\n\n    const handleClose = (value) => {\n        setOpen(false);\n    };\n\n    const handleClear = () => {\n        setBase64_image(\"\");\n    }\n\n    let id = \"\"\n    const markMe = () => {\n        const data = {\n            \"did\": did,\n            \"logs\":\n                [\n                    { \"refid\": id.toString(), \"txntype\": \"1\", \"aid\": \"2\", \"sessionid\": \"0\", \"timestamp\": formatedTimestamp() }\n                ]\n        }\n        console.log(id)\n\n        // dispatch(MarkAttendeeAction(data))\n    }\n\n\n    // const handleVideoOnPlay = async () => {\n    //     const displaySize = {\n    //         width: 640,\n    //         height: 480\n    //     }\n\n    //     // const cInterval = setInterval(async () => {\n\n    //     // console.log(\"-------\",syncDataArr);\n    //     // let canvas = $(\"#canvas\").get(0);\n\n    //     // const fullFaceDescription = faceapi.resizeResults(fullFaceDescriptions, displaySize)\n    //     // const labels = [\"my_image\"]\n    //     // const labeledFaceDescriptors = await Promise.all(\n    //     //     labels.map(async label => {\n    //     //         // console.log(label);\n    //     //         // fetch image data from urls and convert blob to HTMLImage element\n    //     //         // const imgUrl = `assets/img/${label}.jpeg`\n    //     //         // const img = await faceapi.fetchImage(imgUrl)\n    //     //         // const fullFaceDescription = await faceapi.detectSingleFace(img, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor()\n\n    //     //         // if (!fullFaceDescription) {\n    //     //         //     throw new Error(`no faces detected for ${label}`)\n    //     //         // }\n    //     //         for (const item of syncDataArr) {\n    //     //             const faceDescriptors = [item.ftemplate]\n    //     //             return new faceapi.LabeledFaceDescriptors(item.attdname, faceDescriptors)\n    //     //         }\n\n    //     //     })\n    //     // );\n\n    //     // const maxDescriptorDistance = 0.6\n    //     // const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, maxDescriptorDistance)\n    //     // console.log(faceMatcher, fullFaceDescriptions);\n    //     // const results = fullFaceDescriptions.map(fd => faceMatcher.findBestMatch(fd.descriptor))\n    //     // console.table(results);\n    //     // results.forEach((bestMatch, i) => {\n    //     //     console.log(bestMatch, i);\n    //     //     const box = fullFaceDescriptions[i].detection.box\n    //     //     const text = bestMatch.toString()\n    //     //     const drawBox = new faceapi.draw.DrawBox(box, { label: text })\n    //     //     drawBox.draw(canvasRef.current)\n    //     // })\n    //     // count = 0;\n\n\n    //     // detection func\n    //     const syncDataArr = JSON.parse(localStorage.getItem('syncdata'));\n    //     console.log(canvasRef);\n    //     canvasRef.current.innerHTML = faceapi?.createCanvasFromMedia(videoRef?.current);\n    //     faceapi?.matchDimensions(canvasRef.current, displaySize)\n\n    //     let fullFaceDescriptions = await faceapi?.detectAllFaces(videoRef?.current, new faceapi?.TinyFaceDetectorOptions())?.withFaceLandmarks()?.withFaceDescriptors()\n    //     const resizeDetections = faceapi.resizeResults(fullFaceDescriptions, displaySize);\n    //     // canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n    //     canvasRef.current.getContext('2d').clearRect(0, 0, displaySize.width, displaySize.height);\n    //     faceapi?.draw?.drawDetections(canvasRef.current, fullFaceDescriptions)\n\n    //     let labeledFaceDescriptors = [];\n    //     for (const item of syncDataArr) {\n    //         const convertTemplate = item.ftemplate.slice(1, -1).split(\",\");\n    //         if (convertTemplate.length === 128) {\n    //             const faceDescriptors = [Float32Array.from(convertTemplate)];\n    //             id = item.attdcode\n    //             labeledFaceDescriptors.push(new faceapi.LabeledFaceDescriptors(item.attdname, faceDescriptors))\n    //             // const labeledFaceDescriptors = new faceapi.LabeledFaceDescriptors(item.attdname, faceDescriptors)\n    //         }\n    //     }\n\n\n    //     const maxDescriptorDistance = 0.6\n    //     const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, maxDescriptorDistance)\n    //     const results = fullFaceDescriptions.map(fd => faceMatcher.findBestMatch(fd.descriptor))\n    //     results.forEach((bestMatch, i) => {\n    //         const box = fullFaceDescriptions[i].detection.box\n    //         const text = bestMatch.toString()\n    //         const drawBox = new faceapi.draw.DrawBox(box, { label: text })\n    //         drawBox.draw(canvasRef.current)\n    //     })\n\n\n    //     // }, 0)\n\n    //     // setClearTimeInterval(cInterval);\n\n    // }\n\n    const handleVideoOnPlay = async () => {\n        // canvasRef.current.innerHTML = faceapi?.createCanvasFromMedia(videoRef.current);\n        // const referenceImage = await canvasRef.loadImage(videoRef.current);\n        if(!videoRef.current || !canvasRef.current) return;\n        console.log(\"_____________>\",videoRef.current);\n        const displaySize = {\n            height: 300,\n            width: 300\n        }        \n        // const referenceImage = await faceapi.createCanvasFromMedia(videoRef?.current);\n        let fullFaceDescriptions = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptors()\n        faceapi?.matchDimensions(canvasRef?.current, displaySize)\n        const resizeDetections = faceapi.resizeResults(fullFaceDescriptions, displaySize);\n        canvasRef.current?.getContext('2d').clearRect(0, 0, displaySize.width, displaySize.height);\n        faceapi.draw.drawDetections(canvasRef.current, fullFaceDescriptions)\n        const syncDataArr = JSON.parse(localStorage.getItem('syncdata'));\n\n        let labeledFaceDescriptors = [];\n        for (const item of syncDataArr) {\n            const convertTemplate = item.ftemplate.slice(1, -1).split(\",\");\n            if (convertTemplate.length === 128) {\n                const faceDescriptors = [Float32Array.from(convertTemplate)];\n                // localStorage.setItem('attdcode', item.attdcode)\n                labeledFaceDescriptors.push(new faceapi.LabeledFaceDescriptors(item.attdname + \" \" + item.attdcode.toString(), faceDescriptors))\n                // const labeledFaceDescriptors = new faceapi.LabeledFaceDescriptors(item.attdname+ \" \" + item.attdcode.toString(), faceDescriptors)\n\n            }\n        }\n        const maxDescriptorDistance = 0.6\n        const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, maxDescriptorDistance)\n        const results = fullFaceDescriptions.map(fd => faceMatcher.findBestMatch(fd.descriptor))\n        results.forEach((bestMatch, i) => {\n            const box = fullFaceDescriptions[i].detection.box\n            const text = bestMatch.toString()\n            var r = /\\d+/;\n            // setChangeAttdcode(text.match(r)[0]);\n            if (text.includes('unknown')) {\n                const drawOptions = {\n                    anchorPosition: 'TOP_LEFT',\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n                }\n                const drawBox = new faceapi.draw.DrawBox(box, { label: text.slice(0, -6) }, drawOptions)\n                return drawBox.draw(canvasRef.current)\n\n            }\n            else {\n                // const drawBox = new faceapi.draw.DrawBox(box, { label: text.slice(0, -6) })\n                const drawOptions = {\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n                }\n                const drawBox = new faceapi.draw.DrawBox(box, { label: text.slice(0, -6) }, drawOptions)\n                // setToggleMarkBtn(false);\n                return drawBox.draw(canvasRef.current)\n            }\n        })\n\n    }\n    return (\n        <Aux>\n            <main className=\"main-content mt-1 border-radius-lg\">\n                <div className=\"container-fluid py-4 \">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card \">\n                                <div className=\"card-body p-3\">\n                                    <h1 style={{ textAlign: \"center\", margin: \"40px 20px\" }}>Mark Attendance</h1>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-3\">\n\n                                        </div>\n\n                                        <div className=\"col-md-6 \">\n                                            <div className=\"card-body\" style={{ textAlign: \"center\", margin: 0, padding: 0 }}>\n                                                <div style={{ widht: \"750px\", height: \"350px\" }}>\n                                                    {/* <video ref={videoRef} autoPlay muted width={videoConstraints.width} height={videoConstraints.height} /> */}\n                                                    <video ref={videoRef} autoPlay muted height={videoConstraints.height} width={videoConstraints.width} style={{ borderRadius: \"32px\", background: \"#E8E8E8\", boxShadow: \"inset 7px 7px 20px #c5c5c5, inset -2px -7px 16px #ffffff\" }} />\n                                                    <canvas ref={canvasRef} style={{ position: 'absolute', justifyContent: 'center', display: 'flex', top: '13%', left: '31%' }} />\n\n                                                </div>\n                                                <button onClick={markMe} className=\"btn bg-gradient-info w-25 mx-2 my-2\">Mark Attendance</button>\n\n                                                {/* {base64_image ? <img src={`${base64_image}`} style={{ borderRadius: \"5px\", width: \"500px\", height: \"400px\", bordeRadius: \"5px\" }} alt=\"no img\" /> : */}\n                                                {/* <div>\n                                                    <Webcam\n                                                        className=\"w-100\"\n                                                        width={300}\n                                                        height={400}\n                                                        ref={webcamRef}\n                                                        screenshotFormat=\"image/jpeg\"\n                                                        videoConstraints={videoConstraints}\n                                                    />\n\n\n                                                </div> */}\n                                                {/* } */}\n\n                                                {/* {base64_image ? <button onClick={handleClear} className=\"btn bg-gradient-info w-25 mx-2 my-2\" color=\"primary\">\n                                                    Re-Capture\n                                                     </button> : null} */}\n                                            </div>\n                                        </div>\n                                        {/* {Image ? <img src={`data:image/png;base64,${Image}`} style={{ borderRadius: \"5px\", width: \"500px\", height: \"400px\", bordeRadius: \"5px\" }} alt=\"no img\" /> : null} */}\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n            <ToastContainer />\n        </Aux>\n\n    );\n}\n\n\n\nexport default Mark_attendance2;\n","import React, { useEffect, useState } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { getSubOrgList, isSuccess, ReigstrationAction } from '../../Store/Actions/action';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport { useLoading, Oval } from '@agney/react-loading';\n\n\nconst Registration = () => {\n    const [userData, setUserData] = useState({ orgid: '', attendeName: '', idCode: '', email: '', number: '', nodal: '0', attendeCategory: '2', gender: '' });\n    const dispatch = useDispatch();\n    const myState = useSelector((state) => state.vbas_store)\n\n    const getSubOrg = async () => {\n        const did = localStorage.getItem('did_from_login')\n        const data = { \"did\": did }\n        dispatch(isSuccess(true));\n        dispatch(getSubOrgList(data));\n    }\n\n    useEffect(() => {\n        myState.videostop?.srcObject?.getTracks().forEach((track) => {\n            track.stop();\n        })\n        getSubOrg();\n    }, [])\n\n    const handleSubmit = async () => {\n        const data = { \"orgid\": localStorage.getItem('orgid'), \"did\": localStorage.getItem('did_from_login'), \"attdcode\": userData.idCode, \"attdname\": userData.attendeName, \"attdcategory\": userData.attendeCategory, \"mobileno\": userData.number, \"email\": userData.email, \"isnodaloff\": userData.nodal, \"gender\": userData.gender }\n        dispatch(isSuccess(true));\n        // if (userData.idCode && userData.attendeCategory && userData.attendeName && userData.number && userData.email) {\n        // }\n        dispatch(ReigstrationAction(data));\n        setUserData({ orgid: '', attendeName: '', idCode: '', email: '', number: '', nodal: '0', attendeCategory: '', gender: '' });\n    }\n\n    const formFields = [\n        {\n            size: 12,\n            field: (\n                <>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Select1\">School Organization Name</label>\n                            {/* <select className=\"form-control\" id=\"Select1\" onChange={(e) => setUserData({ ...userData, orgid: e.target.value })} value=\"2\" > */}\n                            <select className=\"form-control\" id=\"Select1\" onChange={(e) => setUserData({ ...userData, orgid: e.target.value })} value={userData.orgid} >\n                                {myState.subOrgs.map((value) => {\n                                    const { orgid, orgname } = value;\n                                    return (\n                                        <option value={orgid}>{orgname}</option>\n                                    );\n                                })}\n                                {/* <MenuItem value={myState.subOrgs.orgid}>{myState.subOrgs.orgname}</MenuItem> */}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input1\">Attendee Name</label>\n                            <input type=\"text\" onChange={(e) => setUserData({ ...userData, attendeName: e.target.value })} value={userData.attendeName} className=\"form-control\" id=\"Input1\" />\n                        </div>\n                    </div>\n                </>\n            ),\n        },\n        {\n            size: 12,\n            field: (\n                <>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input2\">Attendee ID/Code</label>\n                            <input type=\"text\" onChange={(e) => setUserData({ ...userData, idCode: e.target.value })} value={userData.idCode} className=\"form-control\" id=\"Input2\" />\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input3\">Email</label>\n                            <input type=\"email\" onChange={(e) => setUserData({ ...userData, email: e.target.value })} value={userData.email} className=\"form-control\" id=\"Input3\" placeholder=\"abc@email.com\" disabled />\n                        </div>\n                    </div>\n                </>\n            ),\n        },\n        {\n            size: 12,\n            field: (\n                <>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Input4\">Mobile Number</label>\n                            <input type=\"number\" value={userData.number} onChange={(e) => setUserData({ ...userData, number: e.target.value })} className=\"form-control\" id=\"Input4\" placeholder=\"+91 8120 687 130\" disabled />\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Select2\">Attendee Category</label>\n                            <select className=\"form-control\" id=\"Select2\" onChange={(e) => setUserData({ ...userData, attendeCategory: e.target.value })} value={userData.attendeCategory} >\n                                <option value=\"1\">Attendee</option>\n                                <option value=\"2\">Student</option>\n                                <option value=\"3\">Staff</option>\n                                <option value=\"4\">Employee</option>\n                            </select>\n                        </div>\n                    </div>\n                </>\n            ),\n        },\n\n        {\n            size: 12,\n            field: (\n                <div className=\"col-md-6\">\n                    <label className=\"custom-control-label\">Gender</label>\n                    <div className=\"form-check\">\n                        <input value={userData.gender} onChange={(e) => setUserData({ ...userData, gender: 'M' })} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"customRadio1\" />\n                        <label className=\"custom-control-label\" for=\"customRadio1\">Male</label>\n                    </div>\n                    <div className=\"form-check mb-3\">\n                        <input value={userData.gender} onChange={(e) => setUserData({ ...userData, gender: 'G' })} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"customRadio2\" />\n                        <label className=\"custom-control-label\" for=\"customRadio2\">Female</label>\n                    </div>\n                </div>\n            ),\n        },\n        {\n            size: 12,\n            field: (\n                <>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-check\">\n                            <input value={userData.nodal} onChange={(e) => setUserData({ ...userData, nodal: '1' })} className=\"form-check-input\" type=\"checkbox\" defaultValue id=\"fcustomCheck1\" defaultChecked />\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Is Nodal Officer</label>\n                        </div>\n                    </div>\n                </>\n            ),\n        },\n\n    ];\n\n    const { containerProps, indicatorEl } = useLoading({\n        loading: true,\n        indicator: <Oval width=\"50\" style={{ textAlign: 'center', justifyContent: 'center', margin: '0 auto', top: \"50%\", left: \"0\", right: \"0\", bottom: \"0\", position: 'fixed', zIndex: '1' }} />,\n    });\n\n\n    return (\n        <Aux>\n\n            <div className=\"container-fluid py-4\">\n                <ToastContainer />\n                <section {...containerProps}>\n\n                    {/* {loader.isSuccess ? <Loader /> : null} */}\n                    {myState.isSuccess ? indicatorEl : null}\n                </section>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card \">\n                            <div className=\"card-header pb-0 p-3\">\n                                <h6 className=\"mb-0\">Attendee Registration</h6>\n                            </div>\n                            <div className=\"card-body p-3\">\n                                <form>\n                                    {/* OrgName */}\n                                    {formFields.map((item, idx) => (\n                                        <div className=\"row\" item xs={item.size} key={idx}>\n                                            {item.field}\n                                        </div>\n                                    ))}\n                                    <div className=\"text-center\">\n                                        <button type=\"button\" onClick={handleSubmit} className=\"btn bg-gradient-info w-100 mt-4 mb-0\">Register</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default Registration;","import React from 'react'\n\nconst Header = () => {\n    const toggleBtn = () => {\n        const iconNavbarSidenav = document.getElementById('iconNavbarSidenav');\n        const iconSidenav = document.getElementById('iconSidenav');\n        const sidenav = document.getElementById('sidenav-main');\n        let body = document.getElementsByTagName('body')[0];\n        let className = 'g-sidenav-pinned';\n        // toggleSidenav();\n        if (body.classList.contains(className)) {\n            body.classList.remove(className);\n            setTimeout(function () {\n                sidenav.classList.remove('bg-white');\n            }, 100);\n            sidenav.classList.remove('bg-transparent');\n\n        } else {\n            body.classList.add(className);\n            sidenav.classList.add('bg-white');\n            sidenav.classList.remove('bg-transparent');\n            iconSidenav.classList.remove('d-none');\n        }\n\n    }\n\n\n    // function toggleSidenav() {\n    //     if (body.classList.contains(className)) {\n    //         body.classList.remove(className);\n    //         setTimeout(function () {\n    //             sidenav.classList.remove('bg-white');\n    //         }, 100);\n    //         sidenav.classList.remove('bg-transparent');\n\n    //     } else {\n    //         body.classList.add(className);\n    //         sidenav.classList.add('bg-white');\n    //         sidenav.classList.remove('bg-transparent');\n    //         iconSidenav.classList.remove('d-none');\n    //     }\n    // }\n\n    return (<nav className=\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\" id=\"navbarBlur\" navbar-scroll=\"true\">\n        <div className=\"container-fluid py-1 px-3\">\n\n            <div className=\"collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4\" id=\"navbar\">\n\n                <ul className=\"navbar-nav  justify-content-end\">\n\n                    <li className=\"nav-item d-xl-none ps-3 d-flex align-items-center\">\n                        <a onClick={toggleBtn} className=\"nav-link text-body p-0\" id=\"iconNavbarSidenav\">\n                            <div className=\"sidenav-toggler-inner\">\n                                <i className=\"sidenav-toggler-line\"></i>\n                                <i className=\"sidenav-toggler-line\"></i>\n                                <i className=\"sidenav-toggler-line\"></i>\n                            </div>\n                        </a>\n                    </li>\n\n                </ul>\n            </div>\n        </div>\n    </nav>\n\n\n\n    )\n}\n\nexport default Header;","import '../../App.css';\nimport { useHistory, NavLink } from \"react-router-dom\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Aux from '../../hoc/Aux';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nconst SideBar = props => {\n\n    const reducerStore = useSelector((state) => state.vbas_store)\n\n    useEffect(() => {\n        // const data1 = videoRef?.current\n        // dispatch(videoStop(data1))\n\n        console.log(reducerStore,this, 'asdf')\n    }, [])\n\n    const history = useHistory()\n    const itemsList = [\n        {\n            text: \"Home\",\n            active: \"active\",\n            icon: \"\",\n            onClick: () => history.push(\"/home\"),\n            url: \"/home\"\n        },\n        {\n            text: \"Registration\",\n            active: \"active\",\n            icon: \"\",\n            onClick: () => history.push(\"/registration\"),\n            url: \"/registration\"\n\n        },\n        {\n            text: \"Face Enrollment\",\n            active: \"active\",\n            icon: \"\",\n            onClick: () => history.push(\"/face_enrollment\"),\n            url: \"/face_enrollment\"\n\n        },\n        {\n            text: \"Mark Attendance\",\n            active: \"active\",\n            icon: \"\",\n            onClick: () => history.push(\"/mark_attendance\"),\n            url: \"/mark_attendance\"\n        }\n    ];\n\n    const logout = () => {\n        localStorage.clear();\n        history.push(\"/login\")\n    }\n\n    const toggleBtn = () => {\n        const iconNavbarSidenav = document.getElementById('iconNavbarSidenav');\n        const iconSidenav = document.getElementById('iconSidenav');\n        const sidenav = document.getElementById('sidenav-main');\n        let body = document.getElementsByTagName('body')[0];\n        let className = 'g-sidenav-pinned';\n        // toggleSidenav();\n        if (body.classList.contains(className)) {\n            body.classList.remove(className);\n            setTimeout(function () {\n                sidenav.classList.remove('bg-white');\n            }, 100);\n            sidenav.classList.remove('bg-transparent');\n\n        } else {\n            body.classList.add(className);\n            sidenav.classList.add('bg-white');\n            sidenav.classList.remove('bg-transparent');\n            iconSidenav.classList.remove('d-none');\n        }\n\n    }\n\n    return (\n        <Aux>\n            {/* sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3 */}\n            {/* sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3 bg-white */}\n            <aside className=\"sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-left ms-3 bg-white\" id=\"sidenav-main\">\n                <div className=\"sidenav-header\" onClick={toggleBtn}>\n                    <i className=\"fas fa-times p-3 cursor-pointer text-secondary opacity-5 position-absolute right-0 top-0 d-none d-xl-none\" aria-hidden=\"true\" id=\"iconSidenav\" />\n                    <a className=\"navbar-brand m-0\">\n                        <img src=\"./assets/img/logo-ct.png\" className=\"navbar-brand-img h-100\" alt=\"...\" />\n                        <span className=\"ms-1 font-weight-bold\">VBAS</span>\n                    </a>\n                </div>\n                <hr className=\"horizontal dark mt-0\" />\n                <div className=\"collapse navbar-collapse  w-auto\" id=\"sidenav-collapse-main\">\n                    <ul className=\"navbar-nav\">\n                        {itemsList.map((item, index) => {\n                            const { text, active, icon, url } = item;\n                            return (\n                                <li className=\"nav-item\" style={{ marginTop: \"20px\" }}>\n                                    <NavLink exact to={url} activeClassName=\"active\" className=\"nav-link\" >\n                                        <div className=\"icon icon-shape icon-sm shadow border-radius-md bg-white text-center me-2 d-flex align-items-center justify-content-center\">\n                                            <svg width=\"12px\" height=\"12px\" viewBox=\"0 0 45 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n                                                <title>shop </title>\n                                                <g id=\"Basic-Elements\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\n                                                    <g id=\"Rounded-Icons\" transform=\"translate(-1716.000000, -439.000000)\" fill=\"#FFFFFF\" fillRule=\"nonzero\">\n                                                        <g id=\"Icons-with-opacity\" transform=\"translate(1716.000000, 291.000000)\">\n                                                            <g id=\"shop-\" transform=\"translate(0.000000, 148.000000)\">\n                                                                <path className=\"color-background\" d=\"M46.7199583,10.7414583 L40.8449583,0.949791667 C40.4909749,0.360605034 39.8540131,0 39.1666667,0 L7.83333333,0 C7.1459869,0 6.50902508,0.360605034 6.15504167,0.949791667 L0.280041667,10.7414583 C0.0969176761,11.0460037 -1.23209662e-05,11.3946378 -1.23209662e-05,11.75 C-0.00758042603,16.0663731 3.48367543,19.5725301 7.80004167,19.5833333 L7.81570833,19.5833333 C9.75003686,19.5882688 11.6168794,18.8726691 13.0522917,17.5760417 C16.0171492,20.2556967 20.5292675,20.2556967 23.494125,17.5760417 C26.4604562,20.2616016 30.9794188,20.2616016 33.94575,17.5760417 C36.2421905,19.6477597 39.5441143,20.1708521 42.3684437,18.9103691 C45.1927731,17.649886 47.0084685,14.8428276 47.0000295,11.75 C47.0000295,11.3946378 46.9030823,11.0460037 46.7199583,10.7414583 Z\" id=\"Path\" opacity=\"0.598981585\" />\n                                                                <path className=\"color-background\" d=\"M39.198,22.4912623 C37.3776246,22.4928106 35.5817531,22.0149171 33.951625,21.0951667 L33.92225,21.1107282 C31.1430221,22.6838032 27.9255001,22.9318916 24.9844167,21.7998837 C24.4750389,21.605469 23.9777983,21.3722567 23.4960833,21.1018359 L23.4745417,21.1129513 C20.6961809,22.6871153 17.4786145,22.9344611 14.5386667,21.7998837 C14.029926,21.6054643 13.533337,21.3722507 13.0522917,21.1018359 C11.4250962,22.0190609 9.63246555,22.4947009 7.81570833,22.4912623 C7.16510551,22.4842162 6.51607673,22.4173045 5.875,22.2911849 L5.875,44.7220845 C5.875,45.9498589 6.7517757,46.9451667 7.83333333,46.9451667 L19.5833333,46.9451667 L19.5833333,33.6066734 L27.4166667,33.6066734 L27.4166667,46.9451667 L39.1666667,46.9451667 C40.2482243,46.9451667 41.125,45.9498589 41.125,44.7220845 L41.125,22.2822926 C40.4887822,22.4116582 39.8442868,22.4815492 39.198,22.4912623 Z\" id=\"Path\" />\n                                                            </g>\n                                                        </g>\n                                                    </g>\n                                                </g>\n                                            </svg>\n                                            {/* <i>{icon}</i> */}\n                                        </div>\n                                        <span className=\"nav-link-text ms-1\">{text}</span>\n                                    </NavLink>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                    <br />\n                </div>\n                <div className=\"sidenav-footer mx-3 mt-3 pt-3\">\n                    <div className=\"card card-background shadow-none card-background-mask-secondary\" id=\"sidenavCard\">\n                        <div className=\"full-background\" style={{ backgroundImage: 'url(\"../assets/img/curved-images/white-curved.jpeg\")' }} />\n                        <div className=\"card-body text-left p-3 w-100\">\n                            <div className=\"docs-info\">\n                                <h6 className=\"text-white up mb-0\">Powered By Syntizen</h6>\n                                <br />\n                                <button onClick={logout} className=\"btn btn-white btn-sm w-100 mb-0\">Sign Out</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </aside>\n        </Aux>\n    );\n};\n\nexport default SideBar;\n","import React, { useEffect, useState } from 'react';\nimport { CheckFaceLiveness, SyncDataAction, ClearCheckLiveness } from '../../Store/Actions/action';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as faceapi from 'face-api.js';\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router';\n\n\nexport default function Mark_attendencetable(props) {\n  const dispatch = useDispatch();\n\n  const MarkAttendence = useSelector((state) => state.vbas_store)\n  const [CheckedValue, setCheckedValue] = useState([]);\n  const [RandomList, setRandomList] = useState([]);\n  const [ImageName, setImageName] = useState(\"\");\n  const [RandomCardAuth, setRandomCardAuth] = useState({ card0: true, card1: false, card2: false, buttonDisabled: false });\n  const [BorderColor, setBorderColor] = useState(false);\n  const [ImageLiveness, setImageLiveness] = useState(false);\n  const history = useHistory();\n  const [pageReload, setPageReload] = useState(false);\n  // const [checkbox, setCheckbox] = useState(false);\n  // const [selItem, setSelItem] = useState([]);\n  const [checkedState, setCheckedState] = useState(\n    new Array(MarkAttendence.SynData.length).fill(false)\n  );\n\n  var MarkData = MarkAttendence.SynData\n\n  useEffect(() => {\n    const checkResp = MarkAttendence.CheckLivenessResp\n      setRandomCardAuth(checkResp)\n\n    // if (checkResp.card0 == false && checkResp.card1 == true) {\n    // } else if (checkResp.card1 == true && checkResp.card0 == false) {\n    //   setRandomCardAuth({card1: true, card0: false})\n    //   else {\n\n    //   }\n    // } else if (checkResp.card2 == true && checkResp.card1 == false) {\n    //   setRandomCardAuth({card2: true, buttonDisabled: true})\n    // } else {\n    //   setRandomCardAuth({card0: true, card1: false})\n    // }\n  }, [MarkAttendence.CheckLivenessResp])\nconsole.log(MarkAttendence.onlyMarkedData, 'rd')\n  useEffect(() => {\n    const did = localStorage.getItem('did_from_login')\n    const data = { \"did\": did, \"lastsyncdate\": Date().toLocaleString().slice(0, 24), \"syncflag\": \"0\" }\n    dispatch(SyncDataAction(data))\n\n    if (performance.navigation.type == performance.navigation.TYPE_RELOAD) {\n      console.log(\"This page is reloaded\");\n    } else {\n      console.log(\"This page is not reloaded\");\n    }\n    // const pageAccessedByReload = (\n    //   (window.performance.navigation && window.performance.navigation.type === 1) ||\n    //     window.performance\n    //       .getEntriesByType('navigation')\n    //       .map((nav) => nav.type)\n    //       .includes('reload')\n    // );\n\n    // alert(pageAccessedByReload);\n    //   if(sessionStorage.reload) { \n    //     sessionStorage.reload = true;\n    //     setTimeout( () => { sessionStorage.setItem('reload', false) }, 2000);\n    // } else {\n    //     sessionStorage.setItem('reload', false);\n    // }\n    //   if (sessionStorage.getItem('reloaded') != null) {\n    //     console.log(\"pagereload\")\n    //     // history.replace('/mark_attendance')\n\n    //     // window.location.reload(true);\n    //       // console.log('page was reloaded');\n    //   } else {\n    //       console.log('page was not reloaded');\n    //   }\n\n    //   sessionStorage.setItem('reloaded', 'yes'); \n    // if (window.performance) {\n    //   if (performance.navigation.type == 2) {\n    //     alert( \"This page is reloaded\" );\n    //   } else {\n    //     alert( \"This page is not reloaded\");\n    //   }\n    // }\n\n\n\n  }, [])\n\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + '/models/';\n      Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(process.env.PUBLIC_URL + '/models/'),\n        // faceapi.nets.mtcnn.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n      ])\n    }\n    loadModels();\n    // setTimeout(() => {\n    getRandom(MarkData, 3)\n    // }, 1000)\n  }, [])\n\n\n\n  function getRandom(MarkData, n) {\n    var result = new Array(n),\n      len = MarkData.length,\n      taken = new Array(len);\n    if (n > len)\n      try {\n        console.log(\"getRandom: more elements taken than available\")\n        // throw new RangeError(\"getRandom: more elements taken than available\");\n      }\n      catch (e) {\n        console.log(e)\n      }\n    while (n--) {\n      var x = Math.floor(Math.random() * len);\n      result[n] = MarkData[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    setRandomList(result)\n    return result;\n  }\n\n  const getBase64 = file => {\n    return new Promise(resolve => {\n      // let fileInfo;\n      let baseURL = \"\";\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        baseURL = reader.result;\n        resolve(baseURL);\n      };\n    });\n  };\n  const handleOnChange = (position) => {\n    // console.log(checkedState,\"CheckedState\")\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n    );\n    setCheckedState(updatedCheckedState);\n\n  }\n\n  // const handleCheck = (item) => {\n  //   // console.log(id, ' asdf')\n  //   item === selItem ? setSelItem(null) : setSelItem(item);\n\n  //   if(item){\n  //   setCheckbox(true);\n  //   }else{\n  //     setCheckbox(false);\n\n  //   }\n  //   // dispatch(CheckFaceLiveness(data))\n  // }\n\n  const faceMatchFunc = async (image) => {\n    try {\n      const img = await faceapi.fetchImage(image);\n      let fullFaceDescriptions = await faceapi.detectAllFaces(img, new faceapi.TinyFaceDetectorOptions({ inputSize: 256 })).withFaceLandmarks().withFaceDescriptors()\n      console.log(fullFaceDescriptions, 'face')\n      if (fullFaceDescriptions.length > 0) {\n        let labeledFaceDescriptors = [];\n        var randomModifiesArray = [];\n        for (const item of RandomList) {\n          item.ftemplate.split(\"$$\").map((templateItem, i) => {\n\n            var convertTemplate = templateItem.split(\",\").splice(0, 128).filter(Boolean)\n            if (convertTemplate.length == 128) {\n              const faceDescriptors = [Float32Array.from(convertTemplate)];\n              labeledFaceDescriptors.push(new faceapi.LabeledFaceDescriptors(item.attdname.toString() + \" \" + item.attdcode.toString(), faceDescriptors))\n            }\n          })\n        }\n        const maxDescriptorDistance = 0.46\n        const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, maxDescriptorDistance)\n        try {\n          const results = fullFaceDescriptions.map(fd => faceMatcher.findBestMatch(fd.descriptor))\n          // console.log(results, 'resul')\n\n          results.forEach((bestMatch, index) => {\n            const text = bestMatch.toString()\n            let textSplit = text.split(\" \")[0]\n            if (textSplit != \"unknown\") {\n              setBorderColor(true)\n            }\n            var reqData = {\n              \"liveimage\": image.split(\",\")[1],\n              \"did\": \"1\",\n              \"aid\": \"316\",\n              \"rrn\": \"1\"\n            }\n\n            if (textSplit != \"unknown\" && RandomCardAuth.card0 == true) {\n              dispatch(CheckFaceLiveness(reqData, { card1: true, card0: false }, { card0: true, card1: false }))\n              // if (checkResp == \"true\") {\n              //   setRandomCardAuth({ card1: true, card0: false })\n              //   dispatch(ClearCheckLiveness())\n              // } else {\n              //   setRandomCardAuth({ card0: true, card1: false })\n              //   dispatch(ClearCheckLiveness())\n              // }\n              setImageName(\"\")\n            } else if (textSplit != \"unknown\" && RandomCardAuth.card0 == false && RandomCardAuth.card1 == true) {\n              // setRandomCardAuth({ card1: false, card2: true })\n              dispatch(CheckFaceLiveness(reqData, {card2: true, card1: false}, {card1: true, card2: false}))\n              // dispatch(ClearCheckLiveness())\n              // setCheckLiveness(CheckLiveness => [results, ...CheckLiveness])\n            } else if (textSplit != \"unknown\" && RandomCardAuth.card1 == false && RandomCardAuth.card2 == true) {\n              dispatch(CheckFaceLiveness(reqData, {card2: false, buttonDisabled: true}, {card2: true, buttonDisabled: false}))\n              // dispatch(ClearCheckLiveness())\n              // setRandomCardAuth({ card2: false, buttonDisabled: true })\n              // setCheckLiveness(CheckLiveness => [results, ...CheckLiveness])\n            } else {\n              // toast.error(\"Face Not Matched\")\n              // dispatch(ClearCheckLiveness())\n              // sessionStorage.setItem('checkLiveness', false)\n              setRandomCardAuth(RandomCardAuth)\n              console.log(\"Face Not Matche\");\n            }\n            const checkResp = MarkAttendence?.CheckLivenessResp\n            if (checkResp == \"true\") {\n\n              setBorderColor(true)\n            }\n          })\n        } catch (error) {\n          console.log(error, 'canvas');\n        }\n      } else {\n        // toast.error(\"face Not found Please upload image again\")\n        console.log(\"face not found, 'jlk\")\n      }\n    } catch (error) {\n      console.log(error, 'err face match')\n    }\n  }\n\n\n\n\n  const handleCapture = async (target) => {\n    // console.log(target, 'target')\n    if (target.files) {\n      if (target.files.length !== 0) {\n        const file = target.files[0];\n        setImageName(file.name)\n        getBase64(file).then(result => {\n          faceMatchFunc(result)\n          // file[\"base64\"] = result;\n          // let fullFaceDescriptions = faceapi?.detectAllFaces(result, new faceapi.TinyFaceDetectorOptions({ inputSize: 256 })).withFaceLandmarks().withFaceDescriptors()\n\n          // let labeledFaceDescriptors = [];\n          // for (const item of RandomList) {\n          //   item.ftemplate.split(\"$$\").map((templateItem, i) => {\n          //     var convertTemplate = templateItem.split(\",\").splice(0, 128).filter(Boolean)\n          //     if (convertTemplate.length == 128) {\n          //       const faceDescriptors = [Float32Array.from(convertTemplate)];\n          //       labeledFaceDescriptors.push(new faceapi.LabeledFaceDescriptors(item.attdname.toString() + \" \" + item.attdcode.toString(), faceDescriptors))\n          //     }\n          //     else {\n\n          //     }\n\n          //   })\n\n\n          // }\n          // const maxDescriptorDistance = 0.8\n          // const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, maxDescriptorDistance)\n\n          // try {\n          //   const results = fullFaceDescriptions.map(fd =>\n          //     faceMatcher.findBestMatch(fd))\n          // } catch (error) {\n          //   console.log(error, 'canvas');\n          // }\n\n\n\n\n\n        }).catch(err => {\n          console.log(err)\n        })\n      }\n    }\n  };\n\n  const formonSubmit = (e) => {\n    e.preventDefault();\n  }\n\n  const CardFunc = () => {\n    return (<>\n      <input\n        accept=\"image/*\"\n        style={{ display: \"none\" }}\n        type=\"file\"\n        id=\"icon-button-fileOne\"\n        capture=\"environment\"\n        onChange={(e) => handleCapture(e.target)}\n      />\n      {/* <input\n        accept=\"image/*\"\n        style={{ display: \"none\" }}\n        type=\"file\"\n        id=\"icon-button-file\"\n        capture=\"environment\"\n        onChange={(e) => handleCapture(e.target)}\n      /> */}\n      <button className=\"w-100 m-0 p-0\" color=\"primary\">\n        <label htmlFor=\"icon-button-fileOne\">\n          Capture\n        </label>\n        <br />\n      </button>\n      <small>\n        <b>\n          {ImageName}\n        </b>\n      </small>\n    </>)\n  }\n\n  const ListOfStudents = (num, n) => {\n    const newVar = MarkAttendence.markchecklist.filter(function (code) {\n      // console.log(num,n,\"index value\")\n      if (code == num.attdcode) {\n        return true\n      } else {\n        return false\n\n      }\n    })\n    // const valuecheck =     \n    // newVar.push(num.attdcode)\n\n    return (<tr>\n      <td>\n        <div className=\"d-flex px-2 py-1\">\n          <div>\n            {/* {console.log(newVar, 'adsf')} */}\n            <img\n              src={`data:image/jpeg;base64,${num?.fimg}`}\n              className=\"avatar avatar-sm me-3\"\n            />\n          </div>\n          <div className=\"d-flex flex-column justify-content-center\">\n            <h6 className=\"mb-0 text-sm\">{num?.attdname}</h6>\n          </div>\n        </div>\n      </td>\n      <td>\n        <p className=\"text-xs font-weight-bold mb-0\">{num?.attdid}</p>\n      </td>\n      <td className=\"align-middle text-center\">\n        <span className=\"text-secondary text-xs font-weight-bold\">\n          {num?.attddes}\n        </span>\n      </td>\n      {\n        newVar.length == \"0\" ?\n          <>\n            {checkedState[n] ? <td className=\"align-middle text-center text-sm\">\n              <span className=\"badge badge-sm bg-gradient-success\">\n                Marked\n              </span>\n            </td>\n              :\n              <td className=\"align-middle text-center text-sm\">\n                <span className=\"badge badge-sm bg-gradient-danger\">\n                  Un Marked\n                </span>\n              </td>\n            }\n\n\n            <td className=\"text-center text-sm align-middle\">\n              <div className=\"form-check\">\n               <input class=\"form-check-input\" \n               id={`custom-checkbox-${n}`}\n               type=\"checkbox\" \n               checked={checkedState[n]}\n\n               onChange={() => handleOnChange(n)} \n                name ={num.attdcode}/>\n              \n                <label className=\"custom-control-label\" htmlFor={`custom-checkbox-${n}`}></label>\n              </div>\n            </td>\n\n\n          </>\n          :\n          <>\n            <td className=\"align-middle text-center text-sm\">\n              <span className=\"badge badge-sm bg-gradient-success\">\n                Marked\n              </span>\n            </td>\n            <td className=\"text-center text-sm align-middle\">\n              <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"fcustomCheck2\" checked />\n                <label className=\"custom-control-label\" htmlFor=\"customCheck2\"></label>\n              </div>\n            </td>\n\n          </>\n      }\n\n      {/* <div className=\"form-check\">\n          {MarkAttendence.markchecklist.map((name, i) => (name == num.attdcode ?\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"fcustomCheck1\" checked />\n            // <label className=\"custom-control-label\" htmlFor=\"customCheck1\"></label>\n            :\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"fcustomCheck2\" checked=\"\" />\n            // null\n          ))}\n        </div>\n\n\n      </td> */}\n      {/* <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"fcustomCheck2\" checked=\"\" />\n          <label className=\"custom-control-label\" htmlFor=\"customCheck2\"></label>\n        </div> */}\n\n\n      {/* <td className=\"align-middle text-center text-sm\">\n        <input type=\"checkbox\" name=\"\" id=\"\" />\n      </td> */}\n    </tr>\n    )\n  }\n  // Li\n  return (\n    <div>\n      <>\n        <div className=\"row \">\n          <div className=\"text-center mt-5 card py-4\">\n            <h2>Random Liveness Check</h2>\n          </div>\n          {RandomList.map((num, i) =>\n            RandomCardAuth[`card${i}`] ?\n              <div className=\"col-lg-4 mt-4\">\n                <div className=\"card\" style={{ border: BorderColor == false ? \"1px solid white\" : MarkAttendence.CheckLivenessResp ? \"1px solid green\" : \"1px solid red\", boxShadow: BorderColor == false ? \"inset 8px 9px 10px rgba(255,255,255,255)\" : MarkAttendence.CheckLivenessResp ? \"inset 8px 9px 10px rgba(0,156,49,0.2)\" : \"inset 8px 9px 10px rgba(255,0,0,0.2)\" }}>\n                  <div className=\"row\">\n                    <div className=\"col-lg-7 p-4\">\n                      <h6>\n                        {\" \"}\n                        <b>{num?.attdname}</b>{\" \"}\n                      </h6>\n                      <h6>{num?.attdid}</h6>\n                      {CardFunc()}\n                    </div>\n                    <div className=\"col-lg-5 p-4\">\n                      <img\n                        className=\"w-100 border-radius-lg\"\n                        src={`data:image/jpeg;base64,${num?.fimg}`}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              :\n              <div className=\"col-lg-4 mt-4\" style={{ opacity: 0.4, pointerEvents: \"none\" }}>\n                {/* <div className=\"col-lg-4 mt-4\" style={{ pointerEvents: \"none\", opacity: 0.4 }}> */}\n                <div className=\"card\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-7 p-4 disabled\">\n                      <h6>\n                        {\" \"}\n                        <b>{num?.attdname}</b>{\" \"}\n                      </h6>\n                      <h6>{num?.attdid}</h6>\n                      <input\n                        disabled\n                        accept=\"image/*\"\n                        style={{ display: \"none\" }}\n                        type=\"file\"\n                        id=\"icon-button-file\"\n                        capture=\"environment\"\n                      // onChange={(e) => handleCapture(e.target)}\n                      />\n                      <Button className=\"w-100 m-0 p-0 disabled\" color=\"primary\">\n                        <label htmlFor=\"icon-button-file\">\n                          Choose File\n                        </label>\n                      </Button>\n                    </div>\n                    <div className=\"col-lg-5 p-4\">\n                      <img\n                        className=\"w-100 border-radius-lg\"\n                        src={`data:image/jpeg;base64,${num?.fimg}`}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n          )}\n\n          <div className=\"text-center mt-4\">\n            <button\n              type=\"button\"\n              className=\"btn bg-gradient-info w-100 mt-1 mb-0\"\n              disabled={RandomCardAuth.buttonDisabled ? \"true\" : \"false\"}\n            >\n              Proceed\n            </button>\n          </div>\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col-12\">\n            <div className=\"card mb-4\">\n              <div className=\"card-header pb-0 text-center mb-3\">\n                <h3>List of Students ({MarkAttendence.markchecklist.length}/ {MarkAttendence.SynData.length})</h3>\n              </div>\n              <div className=\"card-body px-0 pt-0 pb-2\">\n                <div className=\"table-responsive p-0\">\n                  <table className=\"table align-items-center mb-0\">\n                    <thead>\n                      <tr>\n                        <th className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">\n                          NAME\n                        </th>\n                        <th className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2\">\n                          ID\n                        </th>\n                        <th className=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">\n                          Type\n                        </th>\n                        <th className=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">\n                          Status\n                        </th>\n                        <th className=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">\n                          Action\n                        </th>\n                        <th className=\"text-secondary opacity-7\" />\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {MarkAttendence.SynData.map((num, i) =>\n                        ListOfStudents(num,i)\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            <div className=\"text-center mt-3\">\n              <button\n                type=\"button\"\n                className=\"btn bg-gradient-info w-100 mt-1 mb-0\"\n                disabled=\"\"\n              >\n                Mark Attendance\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n\n    </div >\n  )\n}\n","import React,{useRef, useEffect} from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport FaceEnrollment from '../../Views/Face_enrollment/Face_enrollment';\nimport Home from '../../Views/Home/Home';\nimport MarkAttendance from '../../Views/Mark_attendance/Mark_attendance';\nimport MarkAttendance2 from '../../Views/Mark_attendance/Mark_uttam_bhai';\nimport Registration from '../../Views/Registration/Registration';\nimport Header from '../Header/Header';\nimport SideBar from '../SideBar/SideBar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isSuccess ,videoStop} from '../../Store/Actions/action';\n\nimport Mark_attendencetable from '../../Views/Mark_attendance/Mark_attendencetable';\nconst Layouts = (props) => {\n    \n    const user = localStorage.getItem('orgid')\n    const videoRef = useRef();\n\n    const dispatch = useDispatch();\n\n    if (!user) {\n        props.history.replace('/login')\n    }\n\n\n    return (\n        <>\n            <SideBar />\n            <main className=\"main-content mt-1 border-radius-lg\">\n                <Header />\n                <Switch>\n                    <Route exact path=\"/home\" strict component={Home} />\n                    <Route exact path=\"/registration\" render={props => <Registration {...props} />} />\n                    <Route exact path=\"/face_enrollment\" render={props => <FaceEnrollment {...props} />} />\n                    <Route exact path=\"/demo\" render={props => <MarkAttendance2 {...props} />} />\n                    <Route exact path=\"/mark_attendance\" render={props => <MarkAttendance {...props} />} />\n                    <Route exact path=\"/mark_attendancetable\" render={props => <Mark_attendencetable {...props} />} />\n                    <Redirect to=\"/home\" from=\"*\" />\n                </Switch>\n            </main>\n\n        </>\n    )\n}\n\nexport default Layouts;","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Login from './Views/Login/Login';\nimport Aux from \"./hoc/Aux\";\nimport Layouts from \"./Component/Layouts/Layouts\";\n\nconst App = () => {\n  return (\n    <Aux>\n      <Switch>\n        <Route path=\"/login\" exact strict name=\"Login\" render={props => <Login {...props} />} />\n        <Route path=\"/\" strict name=\"Layouts\" render={props => <Layouts {...props} />} />\n        <Redirect to=\"/404\" from=\"*\" />\n      </Switch>\n    </Aux>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../Actions/types'\n\nconst INITIAL = {\n    cameraRed: [],\n    Login: {},\n    Did: \"\",\n    SynData: [],\n    subOrgs : [],\n    RegisterReducer: {},\n    FaceGetDetails: {},\n    EnrollFaceReducer: [],\n    MarkAttendeReducer: [],\n    FaceEmbedReducer: \"\",\n    CheckLivenessResp: { card0: true, card1: false, card2: false, buttonDisabled: false },\n    MarkEmbedRedcuer: [],\n    NotAttendedStudent: [],\n    isSuccess: false,\n    videostop: '',\n    markchecklist: [],\n    onlyMarkedData: []\n\n};\nconst vbas_store = (state = INITIAL, {type, payload}) => {\n    switch (type) {\n        case actionTypes.CAMERAACTION: return {...state, cameraRed:payload};\n        case actionTypes.LOGIN: return {...state, Login: payload};\n        case actionTypes.SYNCDATA: return {...state, SynData: payload };\n        case actionTypes.SUBORGS: return {...state, subOrgs: payload };\n        case actionTypes.DID: return {...state, Did: payload};\n        case actionTypes.REGISTER: return {...state, RegisterReducer: payload };\n        case actionTypes.GETDETAILS: return {...state, FaceGetDetails: payload };\n        case actionTypes.ENROLLFACE: return {...state, EnrollFaceReducer: payload };\n        case actionTypes.MARKATTENDEE: return {...state, MarkAttendeReducer: payload };\n        case actionTypes.CHECKLIVENESS: return {...state, CheckLivenessResp: payload };\n        case actionTypes.FACEEMBEDTYPE: return {...state, FaceEmbedReducer: payload };\n        case actionTypes.MARKEMBEDTYPE: return {...state, MarkEmbedRedcuer: payload}; \n        case actionTypes.SUCCESS: return {...state, isSuccess: payload}; \n        case actionTypes.NOTATTENDED: return {...state, NotAttendedStudent: payload}; \n        case actionTypes.VIDEOSTOP: return {...state, videostop: payload}; \n        case actionTypes.MARKCHECKLIST: return {...state, markchecklist: payload}; \n        case actionTypes.ONLYMARKEDSTUDENTS: return {...state, onlyMarkedData: payload}; \n\n      default:\n            return state;\n    }\n}\n\nexport default vbas_store;","import { combineReducers } from \"redux\";\nimport vbas_store from './reducer';\n\n\nconst AllReducer = combineReducers({\n   vbas_store \n});\n\nexport default AllReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport AllReducer from './Store/Reducers';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(AllReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}